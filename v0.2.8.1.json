{
  "source": {
    "LICENSE": {
      "path": "LICENSE",
      "content": "The MIT License (MIT)\n\nCopyright (c) 2014 \n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n",
      "mode": "100644",
      "type": "blob"
    },
    "README.md": {
      "path": "README.md",
      "content": "styl\n====\n\nWrapper for styl\n",
      "mode": "100644",
      "type": "blob"
    },
    "lib/styl.js": {
      "path": "lib/styl.js",
      "content": "\n/**\n * Require the given path.\n *\n * @param {String} path\n * @return {Object} exports\n * @api public\n */\n\nfunction require(path, parent, orig) {\n  var resolved = require.resolve(path);\n\n  // lookup failed\n  if (null == resolved) {\n    orig = orig || path;\n    parent = parent || 'root';\n    var err = new Error('Failed to require \"' + orig + '\" from \"' + parent + '\"');\n    err.path = orig;\n    err.parent = parent;\n    err.require = true;\n    throw err;\n  }\n\n  var module = require.modules[resolved];\n\n  // perform real require()\n  // by invoking the module's\n  // registered function\n  if (!module.exports) {\n    module.exports = {};\n    module.client = module.component = true;\n    module.call(this, module.exports, require.relative(resolved), module);\n  }\n\n  return module.exports;\n}\n\n/**\n * Registered modules.\n */\n\nrequire.modules = {};\n\n/**\n * Registered aliases.\n */\n\nrequire.aliases = {};\n\n/**\n * Resolve `path`.\n *\n * Lookup:\n *\n *   - PATH/index.js\n *   - PATH.js\n *   - PATH\n *\n * @param {String} path\n * @return {String} path or null\n * @api private\n */\n\nrequire.resolve = function(path) {\n  if (path.charAt(0) === '/') path = path.slice(1);\n\n  var paths = [\n    path,\n    path + '.js',\n    path + '.json',\n    path + '/index.js',\n    path + '/index.json'\n  ];\n\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    if (require.modules.hasOwnProperty(path)) return path;\n    if (require.aliases.hasOwnProperty(path)) return require.aliases[path];\n  }\n};\n\n/**\n * Normalize `path` relative to the current path.\n *\n * @param {String} curr\n * @param {String} path\n * @return {String}\n * @api private\n */\n\nrequire.normalize = function(curr, path) {\n  var segs = [];\n\n  if ('.' != path.charAt(0)) return path;\n\n  curr = curr.split('/');\n  path = path.split('/');\n\n  for (var i = 0; i < path.length; ++i) {\n    if ('..' == path[i]) {\n      curr.pop();\n    } else if ('.' != path[i] && '' != path[i]) {\n      segs.push(path[i]);\n    }\n  }\n\n  return curr.concat(segs).join('/');\n};\n\n/**\n * Register module at `path` with callback `definition`.\n *\n * @param {String} path\n * @param {Function} definition\n * @api private\n */\n\nrequire.register = function(path, definition) {\n  require.modules[path] = definition;\n};\n\n/**\n * Alias a module definition.\n *\n * @param {String} from\n * @param {String} to\n * @api private\n */\n\nrequire.alias = function(from, to) {\n  if (!require.modules.hasOwnProperty(from)) {\n    throw new Error('Failed to alias \"' + from + '\", it does not exist');\n  }\n  require.aliases[to] = from;\n};\n\n/**\n * Return a require function relative to the `parent` path.\n *\n * @param {String} parent\n * @return {Function}\n * @api private\n */\n\nrequire.relative = function(parent) {\n  var p = require.normalize(parent, '..');\n\n  /**\n   * lastIndexOf helper.\n   */\n\n  function lastIndexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * The relative require() itself.\n   */\n\n  function localRequire(path) {\n    var resolved = localRequire.resolve(path);\n    return require(resolved, parent, path);\n  }\n\n  /**\n   * Resolve relative to the parent.\n   */\n\n  localRequire.resolve = function(path) {\n    var c = path.charAt(0);\n    if ('/' == c) return path.slice(1);\n    if ('.' == c) return require.normalize(p, path);\n\n    // resolve deps by returning\n    // the dep in the nearest \"deps\"\n    // directory\n    var segs = parent.split('/');\n    var i = lastIndexOf(segs, 'deps') + 1;\n    if (!i) i = 0;\n    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;\n    return path;\n  };\n\n  /**\n   * Check if module is defined at `path`.\n   */\n\n  localRequire.exists = function(path) {\n    return require.modules.hasOwnProperty(localRequire.resolve(path));\n  };\n\n  return localRequire;\n};\nrequire.register(\"visionmedia-debug/index.js\", function(exports, require, module){\nif ('undefined' == typeof window) {\n  module.exports = require('./lib/debug');\n} else {\n  module.exports = require('./debug');\n}\n\n});\nrequire.register(\"visionmedia-debug/debug.js\", function(exports, require, module){\n\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\nif (window.localStorage) debug.enable(localStorage.debug);\n\n});\nrequire.register(\"visionmedia-css-whitespace/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('./lib/parser');\nvar compile = require('./lib/compiler');\n\n/**\n * Compile a whitespace significant\n * `str` of CSS to the valid CSS\n * equivalent.\n *\n * @param {String} str\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(str){\n  return compile(parse(str));\n};\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/compiler.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:parser');\n\n/**\n * Compile the given `node`.\n *\n * @param {Array} node\n * @return {String}\n * @api private\n */\n\nmodule.exports = function(node){\n  var indents = 0;\n  var rules = [];\n  var stash = [];\n  var level = 0;\n  var nest = 0;\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(node, false, 12, true));\n  }\n\n  return visit(node);\n\n  /**\n   * Visit `node`.\n   */\n\n  function visit(node) {\n    switch (node[0]) {\n      case 'root':\n        return root(node);\n      case 'rule':\n        if ('@' == node[1][0][0]) ++nest;\n        var ret = rule(node);\n        if ('@' == node[1][0][0]) --nest;\n        return ret;\n      case 'block':\n        ++level;\n        var ret = block(node);\n        --level;\n        return ret;\n      case 'prop':\n        return prop(node);\n      case 'comment':\n        return comment(node);\n      default:\n        throw new Error('invalid node \"' + node[0] + '\"');\n    }\n  }\n\n  /**\n   * Visit block.\n   */\n\n  function block(node) {\n    var buf = [];\n    var nodes = node[1];\n\n    for (var i = 0; i < nodes.length; ++i) {\n      buf.push(visit(nodes[i]));\n    }\n\n    return buf.join('');\n  }\n\n  /**\n   * Visit comment.\n   */\n\n  function comment(node) {\n    return indent() + '/*' + node[1] + '*/\\n';\n  }\n\n  /**\n   * Visit prop.\n   */\n\n  function prop(node) {\n    var prop = node[1];\n    var val = node[2];\n    return indent() + prop + ': ' + val + ';\\n';\n  }\n\n  /**\n   * Visit rule.\n   */\n\n  function rule(node) {\n    var font = '@font-face' == node[1][0].trim();\n    var rule = node[1];\n    var block = node[2];\n    var buf = '';\n\n    if (!block) return rule.join('') + ';';\n\n    rules.push(node);\n\n    if ('@' == rule[0][0] && !font) {\n      buf = join(rules) + ' {\\n';\n      visit(block);\n      buf += stash.join('\\n');\n      buf += '\\n}';\n      stash = [];\n    } else if (nest && !font) {\n      indents = 1;\n      buf = join(rules, 1) + ' {\\n';\n      indents = 2;\n      buf += visit(block);\n      buf += '  }';\n      indents = 1;\n    } else {\n      indents = 0;\n      buf = join(rules) + ' {\\n'\n      indents = 1;\n      buf += visit(block);\n      indents = 0;\n      buf += '}';\n      if (!hasProperties(block)) buf = '';\n    }\n\n    if (rules.length > 1) {\n      if (hasProperties(block)) stash.push(buf);\n      buf = '';\n    }\n\n    rules.pop();\n\n    return buf;\n  }\n\n  /**\n   * Visit root.\n   */\n\n  function root(node) {\n    var buf = [];\n    for (var i = 0; i < node[1].length; ++i) {\n      buf.push(visit(node[1][i]));\n      if (stash.length) {\n        buf = buf.concat(stash);\n        stash = [];\n      }\n    }\n    return buf.join('\\n\\n');\n  }\n\n  /**\n   * Join the given rules.\n   *\n   * @param {Array} rules\n   * @param {Number} [offset]\n   * @return {String}\n   * @api private\n   */\n\n  function join(rules, offset) {\n    offset = offset || 0;\n    var selectors = [];\n    var buf = [];\n    var curr;\n    var next;\n\n    function compile(rules, i) {\n      if (offset != i) {\n        rules[i][1].forEach(function(selector){\n          var parent = ~selector.indexOf('&');\n          selector = selector.replace('&', '');\n          buf.unshift(parent ? selector : ' ' + selector);\n          compile(rules, i - 1);\n          buf.shift();\n        });\n      } else {\n        rules[i][1].forEach(function(selector){\n          var tail = buf.join('');\n          selectors.push(indent() + selector + tail);\n        });\n      }\n    }\n\n    compile(rules, rules.length - 1);\n\n    return selectors.join(',\\n');\n  }\n\n  /**\n   * Return indent.\n   */\n\n  function indent() {\n    return Array(indents + 1).join('  ');\n  }\n};\n\n/**\n * Check if `block` has properties.\n *\n * @param {Array} block\n * @return {Boolean}\n * @api private\n */\n\nfunction hasProperties(block) {\n  var nodes = block[1];\n  for (var i = 0; i < nodes.length; ++i) {\n    if ('prop' == nodes[i][0]) return true;\n  }\n  return false;\n}\n\n/**\n * Blank string filter.\n *\n * @api private\n */\n\nfunction blank(str) {\n  return '' != str;\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/lexer.js\", function(exports, require, module){\n\n/**\n * Pesudo selectors.\n */\n\nvar pseudos = [\n  ':selection',\n  'fullscreen',\n  'nth-child',\n  'first-child',\n  'last-child',\n  'link',\n  'visited',\n  'hover',\n  'active',\n  'focus',\n  'first-letter',\n  'first-line',\n  'before',\n  'after',\n  'lang',\n  'enabled',\n  'disabled',\n  'only-child',\n  'only-of-type',\n  'first-of-type',\n  'last-of-type',\n  'nth-last-of-type',\n  'nth-of-type',\n  'root',\n  'empty',\n  'target',\n  'not',\n  '-o',\n  '-ms',\n  '-moz',\n  '-webkit'\n]\n\n/**\n * Property regexp.\n */\n\npseudos = pseudos.join('|');\nvar propre = new RegExp('^ *([-\\\\w]+):(?!' + pseudos + ') *([^\\n]*)');\n\n/**\n * Scan the given `str` returning tokens.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var indents = [0];\n  var stash = [];\n\n  // strip blanks\n  str = str.replace(/\\r/g, '');\n  str = str.replace(/\\n\\s*\\n/gm, '\\n');\n\n  return scan();\n\n  /**\n   * tok+\n   */\n\n  function scan() {\n    var toks = []\n      , curr;\n\n    while (str.length) {\n      curr = next();\n      curr && toks.push(curr);\n      if (str.length && !curr) {\n        throw new Error('syntax error near \"' + str.slice(0, 10) + '\"');\n      }\n    }\n\n    toks = toks.concat(stash);\n    while (indents.pop()) toks.push(['outdent']);\n    toks.push(['eos']);\n    return toks;\n  }\n\n  /**\n   *   eos\n   * | indentation\n   * | rule\n   */\n\n  function next() {\n    return stashed()\n      || comment()\n      || csscomment()\n      || indentation()\n      || prop()\n      || rule();\n  }\n\n  /**\n   * Deferred tokens.\n   */\n\n  function stashed() {\n    return stash.shift();\n  }\n\n  /**\n   * Comment.\n   */\n\n  function comment() {\n    var m = str.match(/^\\/\\/([^\\n]*)/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return next();\n  }\n\n  /**\n   * Multiline comment.\n   */\n\n  function csscomment() {\n    if ('/' != str[0] || '*' != str[1]) return;\n    str = str.slice(2);\n\n    var i = 0;\n    while ('*' != str[i] && '/' != str[i + 1]) ++i;\n\n    var buf = str.slice(0, i);\n    str = str.slice(buf.length + 2);\n\n    return ['comment', buf];\n  }\n\n  /**\n   *   INDENT\n   * | OUTDENT\n   */\n\n  function indentation() {\n    var spaces = str.match(/^\\n( *)/);\n    if (!spaces) return;\n    str = str.slice(spaces[0].length);\n    spaces = spaces[1].length;\n    var prev = indents[indents.length - 1];\n\n    // INDENT\n    if (spaces > prev) return indent(spaces);\n\n    // OUTDENT\n    if (spaces < prev) return outdent(spaces);\n\n    return next();\n  }\n\n  /**\n   * Indent.\n   */\n\n  function indent(spaces) {\n    indents.push(spaces);\n    return ['indent'];\n  }\n\n  /**\n   * Outdent.\n   */\n\n  function outdent(spaces) {\n    while (indents[indents.length - 1] > spaces) {\n      indents.pop();\n      stash.push(['outdent']);\n    }\n    return stashed();\n  }\n\n  /**\n   * Property.\n   */\n\n  function prop() {\n    var m = str.match(propre);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return ['prop', m[1], m[2]];\n  }\n\n  /**\n   * Rule.\n   */\n\n  function rule() {\n    var m = str.match(/^([^\\n,]+, *\\n|[^\\n]+)+/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    m = m[0].split(/\\s*,\\s*/);\n    return ['rule', m];\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/parser.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:lexer');\nvar scan = require('./lexer');\n\n/**\n * Parse the given `str`, returning an AST.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var toks = scan(str);\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(toks, false, 12, true));\n  }\n\n  return stmts();\n\n  /**\n   * Grab the next token.\n   */\n\n  function next() {\n    return toks.shift();\n  }\n\n  /**\n   * Check if the next token is `type`.\n   */\n\n  function is(type) {\n    if (type == toks[0][0]) return true;\n  }\n\n  /**\n   * Expect `type` or throw.\n   */\n\n  function expect(type) {\n    if (is(type)) return next();\n    throw new Error('expected \"' + type + '\", but got \"' + toks[0][0] + '\"');\n  }\n\n  /**\n   * stmt+\n   */\n\n  function stmts() {\n    var stmts = [];\n    while (!is('eos')) stmts.push(stmt());\n    return ['root', stmts];\n  }\n\n  /**\n   * INDENT stmt+ OUTDENT\n   */\n\n  function block() {\n    var props = [];\n    expect('indent');\n    while (!is('outdent')) props.push(stmt());\n    expect('outdent');\n    return ['block', props];\n  }\n\n  /**\n   *   rule\n   * | prop\n   */\n\n  function stmt() {\n    if (is('rule')) return rule();\n    if (is('prop')) return prop();\n    return next();\n  }\n\n  /**\n   *   prop\n   * | prop INDENT rule* OUTDENT\n   */\n\n  function prop() {\n    var prop = next();\n    if (is('indent')) {\n      next();\n      while (!is('outdent')) {\n        var tok = next();\n        prop[2] += ' ' + tok[1].join(', ');\n      }\n      expect('outdent');\n    }\n    return prop;\n  }\n\n  /**\n   * rule block?\n   */\n\n  function rule() {\n    var rule = next();\n    if (is('indent')) rule.push(block());\n    return rule;\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-parse/index.js\", function(exports, require, module){\n\nmodule.exports = function(css, options){\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n\n  function updatePosition(str) {\n    var lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf('\\n');\n    column = ~i ? str.length-i : column + str.length;\n  }\n\n  function position() {\n    var start = { line: lineno, column: column };\n    if (!options.position) return positionNoop;\n    return function(node){\n      node.position = {\n        start: start,\n        end: { line: lineno, column: column }\n      };\n      whitespace();\n      return node;\n    }\n  }\n\n  /**\n   * Return `node`.\n   */\n  function positionNoop(node) {\n    whitespace();\n    return node;\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n\n  function stylesheet() {\n    return {\n      type: 'stylesheet',\n      stylesheet: {\n        rules: rules()\n      }\n    };\n  }\n\n  /**\n   * Opening brace.\n   */\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  /**\n   * Closing brace.\n   */\n\n  function close() {\n    return match(/^}/);\n  }\n\n  /**\n   * Parse ruleset.\n   */\n\n  function rules() {\n    var node;\n    var rules = [];\n    whitespace();\n    comments(rules);\n    while (css[0] != '}' && (node = atrule() || rule())) {\n      rules.push(node);\n      comments(rules);\n    }\n    return rules;\n  }\n\n  /**\n   * Match `re` and return captures.\n   */\n\n  function match(re) {\n    var m = re.exec(css);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  /**\n   * Parse comments;\n   */\n\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while (c = comment()) rules.push(c);\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n\n  function comment() {\n    var pos = position();\n    if ('/' != css[0] || '*' != css[1]) return;\n\n    var i = 2;\n    while (null != css[i] && ('*' != css[i] || '/' != css[i + 1])) ++i;\n    i += 2;\n\n    var str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n    return pos({\n      type: 'comment',\n      comment: str\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n\n  function selector() {\n    var m = match(/^([^{]+)/);\n    if (!m) return;\n    return m[0].trim().split(/\\s*,\\s*/);\n  }\n\n  /**\n   * Parse declaration.\n   */\n\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(/^(\\*?[-\\w]+)\\s*/);\n    if (!prop) return;\n    prop = prop[0];\n\n    // :\n    if (!match(/^:\\s*/)) return;\n\n    // val\n    var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n    if (!val) return;\n\n    var ret = pos({\n      type: 'declaration',\n      property: prop,\n      value: val[0].trim()\n    });\n\n    // ;\n    match(/^[;\\s]*/);\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n\n  function declarations() {\n    var decls = [];\n\n    if (!open()) return;\n    comments(decls);\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments(decls);\n    }\n\n    if (!close()) return;\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n\n  function keyframe() {\n    var m;\n    var vals = [];\n    var pos = position();\n\n    while (m = match(/^(from|to|\\d+%|\\.\\d+%|\\d+\\.\\d+%)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) return;\n\n    return pos({\n      type: 'keyframe',\n      values: vals,\n      declarations: declarations()\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n\n  function atkeyframes() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?keyframes */);\n\n    if (!m) return;\n    var vendor = m[1];\n\n    // identifier\n    var m = match(/^([-\\w]+)\\s*/);\n    if (!m) return;\n    var name = m[1];\n\n    if (!open()) return;\n    comments();\n\n    var frame;\n    var frames = [];\n    while (frame = keyframe()) {\n      frames.push(frame);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'keyframes',\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n\n  function atsupports() {\n    var pos = position();\n    var m = match(/^@supports *([^{]+)/);\n\n    if (!m) return;\n    var supports = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'supports',\n      supports: supports,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n\n  function atmedia() {\n    var pos = position();\n    var m = match(/^@media *([^{]+)/);\n\n    if (!m) return;\n    var media = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'media',\n      media: media,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n\n  function atpage() {\n    var pos = position();\n    var m = match(/^@page */);\n    if (!m) return;\n\n    var sel = selector() || [];\n    var decls = [];\n\n    if (!open()) return;\n    comments();\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'page',\n      selectors: sel,\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n\n  function atdocument() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) return;\n\n    var vendor = m[1].trim();\n    var doc = m[2].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'document',\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse import\n   */\n\n  function atimport() {\n    return _atrule('import');\n  }\n\n  /**\n   * Parse charset\n   */\n\n  function atcharset() {\n    return _atrule('charset');\n  }\n\n  /**\n   * Parse namespace\n   */\n\n  function atnamespace() {\n    return _atrule('namespace')\n  }\n\n  /**\n   * Parse non-block at-rules\n   */\n\n  function _atrule(name) {\n    var pos = position();\n    var m = match(new RegExp('^@' + name + ' *([^;\\\\n]+);'));\n    if (!m) return;\n    var ret = { type: name };\n    ret[name] = m[1].trim();\n    return pos(ret);\n  }\n\n  /**\n   * Parse at rule.\n   */\n\n  function atrule() {\n    return atkeyframes()\n      || atmedia()\n      || atsupports()\n      || atimport()\n      || atcharset()\n      || atnamespace()\n      || atdocument()\n      || atpage();\n  }\n\n  /**\n   * Parse rule.\n   */\n\n  function rule() {\n    var pos = position();\n    var sel = selector();\n\n    if (!sel) return;\n    comments();\n\n    return pos({\n      type: 'rule',\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n\n  return stylesheet();\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar Compressed = require('./lib/compress');\nvar Identity = require('./lib/identity');\n\n/**\n * Stringfy the given AST `node`.\n *\n * @param {Object} node\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(node, options){\n  if (options.compress) {\n    return new Compressed(options).compile(node);\n  }\n\n  return new Identity(options).compile(node);\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/compress.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  if (this.compress) return '';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + '{'\n    + node.keyframes.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return node.values.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var decls = node.declarations;\n  if (!decls.length) return '';\n\n  return node.selectors.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return node.property + ':' + node.value + ';';\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/identity.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n  this.indentation = options.indent;\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('\\n\\n');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  return this.indent() + '/*' + node.comment + '*/';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc + ' '\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';\\n';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + ' {\\n'\n    + this.indent(1)\n    + node.keyframes.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return this.indent()\n    + node.values.join(', ')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}\\n';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var indent = this.indent();\n  var decls = node.declarations;\n\n  return node.selectors.map(function(s){ return indent + s }).join(',\\n')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return this.indent() + node.property + ': ' + node.value + ';';\n};\n\n/**\n * Increase, decrease or return current indentation.\n */\n\nCompiler.prototype.indent = function(level) {\n  this.level = this.level || 1;\n\n  if (null != level) {\n    this.level += level;\n    return '';\n  }\n\n  return Array(this.level).join(this.indentation || '  ');\n};\n\n});\nrequire.register(\"visionmedia-css/index.js\", function(exports, require, module){\n\nexports.parse = require('css-parse');\nexports.stringify = require('css-stringify');\n\n});\nrequire.register(\"component-color-parser/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar colors = require('./colors');\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Parse `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api public\n */\n\nfunction parse(str) {\n  return named(str)\n    || hex3(str)\n    || hex6(str)\n    || rgb(str)\n    || rgba(str);\n}\n\n/**\n * Parse named css color `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction named(str) {\n  var c = colors[str.toLowerCase()];\n  if (!c) return;\n  return {\n    r: c[0],\n    g: c[1],\n    b: c[2]\n  }\n}\n\n/**\n * Parse rgb(n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgb(str) {\n  if (0 == str.indexOf('rgb(')) {\n    str = str.match(/rgb\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse rgba(n, n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgba(str) {\n  if (0 == str.indexOf('rgba(')) {\n    str = str.match(/rgba\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: parts[3]\n    }\n  }\n}\n\n/**\n * Parse #nnnnnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex6(str) {\n  if ('#' == str[0] && 7 == str.length) {\n    return {\n      r: parseInt(str.slice(1, 3), 16),\n      g: parseInt(str.slice(3, 5), 16),\n      b: parseInt(str.slice(5, 7), 16),\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse #nnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex3(str) {\n  if ('#' == str[0] && 4 == str.length) {\n    return {\n      r: parseInt(str[1] + str[1], 16),\n      g: parseInt(str[2] + str[2], 16),\n      b: parseInt(str[3] + str[3], 16),\n      a: 1\n    }\n  }\n}\n\n\n});\nrequire.register(\"component-color-parser/colors.js\", function(exports, require, module){\n\nmodule.exports = {\n    aliceblue: [240, 248, 255]\n  , antiquewhite: [250, 235, 215]\n  , aqua: [0, 255, 255]\n  , aquamarine: [127, 255, 212]\n  , azure: [240, 255, 255]\n  , beige: [245, 245, 220]\n  , bisque: [255, 228, 196]\n  , black: [0, 0, 0]\n  , blanchedalmond: [255, 235, 205]\n  , blue: [0, 0, 255]\n  , blueviolet: [138, 43, 226]\n  , brown: [165, 42, 42]\n  , burlywood: [222, 184, 135]\n  , cadetblue: [95, 158, 160]\n  , chartreuse: [127, 255, 0]\n  , chocolate: [210, 105, 30]\n  , coral: [255, 127, 80]\n  , cornflowerblue: [100, 149, 237]\n  , cornsilk: [255, 248, 220]\n  , crimson: [220, 20, 60]\n  , cyan: [0, 255, 255]\n  , darkblue: [0, 0, 139]\n  , darkcyan: [0, 139, 139]\n  , darkgoldenrod: [184, 132, 11]\n  , darkgray: [169, 169, 169]\n  , darkgreen: [0, 100, 0]\n  , darkgrey: [169, 169, 169]\n  , darkkhaki: [189, 183, 107]\n  , darkmagenta: [139, 0, 139]\n  , darkolivegreen: [85, 107, 47]\n  , darkorange: [255, 140, 0]\n  , darkorchid: [153, 50, 204]\n  , darkred: [139, 0, 0]\n  , darksalmon: [233, 150, 122]\n  , darkseagreen: [143, 188, 143]\n  , darkslateblue: [72, 61, 139]\n  , darkslategray: [47, 79, 79]\n  , darkslategrey: [47, 79, 79]\n  , darkturquoise: [0, 206, 209]\n  , darkviolet: [148, 0, 211]\n  , deeppink: [255, 20, 147]\n  , deepskyblue: [0, 191, 255]\n  , dimgray: [105, 105, 105]\n  , dimgrey: [105, 105, 105]\n  , dodgerblue: [30, 144, 255]\n  , firebrick: [178, 34, 34]\n  , floralwhite: [255, 255, 240]\n  , forestgreen: [34, 139, 34]\n  , fuchsia: [255, 0, 255]\n  , gainsboro: [220, 220, 220]\n  , ghostwhite: [248, 248, 255]\n  , gold: [255, 215, 0]\n  , goldenrod: [218, 165, 32]\n  , gray: [128, 128, 128]\n  , green: [0, 128, 0]\n  , greenyellow: [173, 255, 47]\n  , grey: [128, 128, 128]\n  , honeydew: [240, 255, 240]\n  , hotpink: [255, 105, 180]\n  , indianred: [205, 92, 92]\n  , indigo: [75, 0, 130]\n  , ivory: [255, 255, 240]\n  , khaki: [240, 230, 140]\n  , lavender: [230, 230, 250]\n  , lavenderblush: [255, 240, 245]\n  , lawngreen: [124, 252, 0]\n  , lemonchiffon: [255, 250, 205]\n  , lightblue: [173, 216, 230]\n  , lightcoral: [240, 128, 128]\n  , lightcyan: [224, 255, 255]\n  , lightgoldenrodyellow: [250, 250, 210]\n  , lightgray: [211, 211, 211]\n  , lightgreen: [144, 238, 144]\n  , lightgrey: [211, 211, 211]\n  , lightpink: [255, 182, 193]\n  , lightsalmon: [255, 160, 122]\n  , lightseagreen: [32, 178, 170]\n  , lightskyblue: [135, 206, 250]\n  , lightslategray: [119, 136, 153]\n  , lightslategrey: [119, 136, 153]\n  , lightsteelblue: [176, 196, 222]\n  , lightyellow: [255, 255, 224]\n  , lime: [0, 255, 0]\n  , limegreen: [50, 205, 50]\n  , linen: [250, 240, 230]\n  , magenta: [255, 0, 255]\n  , maroon: [128, 0, 0]\n  , mediumaquamarine: [102, 205, 170]\n  , mediumblue: [0, 0, 205]\n  , mediumorchid: [186, 85, 211]\n  , mediumpurple: [147, 112, 219]\n  , mediumseagreen: [60, 179, 113]\n  , mediumslateblue: [123, 104, 238]\n  , mediumspringgreen: [0, 250, 154]\n  , mediumturquoise: [72, 209, 204]\n  , mediumvioletred: [199, 21, 133]\n  , midnightblue: [25, 25, 112]\n  , mintcream: [245, 255, 250]\n  , mistyrose: [255, 228, 225]\n  , moccasin: [255, 228, 181]\n  , navajowhite: [255, 222, 173]\n  , navy: [0, 0, 128]\n  , oldlace: [253, 245, 230]\n  , olive: [128, 128, 0]\n  , olivedrab: [107, 142, 35]\n  , orange: [255, 165, 0]\n  , orangered: [255, 69, 0]\n  , orchid: [218, 112, 214]\n  , palegoldenrod: [238, 232, 170]\n  , palegreen: [152, 251, 152]\n  , paleturquoise: [175, 238, 238]\n  , palevioletred: [219, 112, 147]\n  , papayawhip: [255, 239, 213]\n  , peachpuff: [255, 218, 185]\n  , peru: [205, 133, 63]\n  , pink: [255, 192, 203]\n  , plum: [221, 160, 203]\n  , powderblue: [176, 224, 230]\n  , purple: [128, 0, 128]\n  , red: [255, 0, 0]\n  , rosybrown: [188, 143, 143]\n  , royalblue: [65, 105, 225]\n  , saddlebrown: [139, 69, 19]\n  , salmon: [250, 128, 114]\n  , sandybrown: [244, 164, 96]\n  , seagreen: [46, 139, 87]\n  , seashell: [255, 245, 238]\n  , sienna: [160, 82, 45]\n  , silver: [192, 192, 192]\n  , skyblue: [135, 206, 235]\n  , slateblue: [106, 90, 205]\n  , slategray: [119, 128, 144]\n  , slategrey: [119, 128, 144]\n  , snow: [255, 255, 250]\n  , springgreen: [0, 255, 127]\n  , steelblue: [70, 130, 180]\n  , tan: [210, 180, 140]\n  , teal: [0, 128, 128]\n  , thistle: [216, 191, 216]\n  , tomato: [255, 99, 71]\n  , turquoise: [64, 224, 208]\n  , violet: [238, 130, 238]\n  , wheat: [245, 222, 179]\n  , white: [255, 255, 255]\n  , whitesmoke: [245, 245, 245]\n  , yellow: [255, 255, 0]\n  , yellowgreen: [154, 205, 5]\n};\n});\nrequire.register(\"component-path/index.js\", function(exports, require, module){\n\nexports.basename = function(path){\n  return path.split('/').pop();\n};\n\nexports.dirname = function(path){\n  return path.split('/').slice(0, -1).join('/') || '.'; \n};\n\nexports.extname = function(path){\n  var base = exports.basename(path);\n  if (!~base.indexOf('.')) return '';\n  var ext = base.split('.').pop();\n  return '.' + ext;\n};\n});\nrequire.register(\"visionmedia-rework/index.js\", function(exports, require, module){\n\nmodule.exports = require('./lib/rework');\n});\nrequire.register(\"visionmedia-rework/lib/rework.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar css = require('css');\n\n/**\n * Expose `rework`.\n */\n\nexports = module.exports = rework;\n\n/**\n * Expose `visit` helpers.\n */\n\nexports.visit = require('./visit');\n\n/**\n * Expose prefix properties.\n */\n\nexports.properties = require('./properties');\n\n/**\n * Initialize a new stylesheet `Rework` with `str`.\n *\n * @param {String} str\n * @return {Rework}\n * @api public\n */\n\nfunction rework(str) {\n  return new Rework(css.parse(str));\n}\n\n/**\n * Initialize a new stylesheet `Rework` with `obj`.\n *\n * @param {Object} obj\n * @api private\n */\n\nfunction Rework(obj) {\n  this.obj = obj;\n}\n\n/**\n * Use the given plugin `fn(style, rework)`.\n *\n * @param {Function} fn\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.use = function(fn){\n  fn(this.obj.stylesheet, this);\n  return this;\n};\n\n/**\n * Specify global vendor `prefixes`,\n * explicit ones may still be passed\n * to most plugins.\n *\n * @param {Array} prefixes\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.vendors = function(prefixes){\n  this.prefixes = prefixes;\n  return this;\n};\n\n/**\n * Stringify the stylesheet.\n *\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nRework.prototype.toString = function(options){\n  return css.stringify(this.obj, options);\n};\n\n/**\n * Expose plugins.\n */\n\nexports.mixin = exports.mixins = require('./plugins/mixin');\nexports.function = exports.functions = require('./plugins/function');\nexports.prefix = require('./plugins/prefix');\nexports.colors = require('./plugins/colors');\nexports.extend = require('./plugins/extend');\nexports.references = require('./plugins/references');\nexports.prefixValue = require('./plugins/prefix-value');\nexports.prefixSelectors = require('./plugins/prefix-selectors');\nexports.keyframes = require('./plugins/keyframes');\nexports.at2x = require('./plugins/at2x');\nexports.url = require('./plugins/url');\nexports.ease = require('./plugins/ease');\nexports.vars = require('./plugins/vars');\n\n/**\n * Try/catch plugins unavailable in component.\n */\n\n try {\n  exports.inline = require('./plugins/inline');\n} catch (err) {};\n\n});\nrequire.register(\"visionmedia-rework/lib/utils.js\", function(exports, require, module){\n\n/**\n * Strip `str` quotes.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.stripQuotes = function(str) {\n  if ('\"' == str[0] || \"'\" == str[0]) return str.slice(1, -1);\n  return str;\n};\n});\nrequire.register(\"visionmedia-rework/lib/visit.js\", function(exports, require, module){\n\n/**\n * Visit `node`'s declarations recursively and\n * invoke `fn(declarations, node)`.\n *\n * @param {Object} node\n * @param {Function} fn\n * @api private\n */\n\nexports.declarations = function(node, fn){\n  node.rules.forEach(function(rule){\n    // @media etc\n    if (rule.rules) {\n      exports.declarations(rule, fn);\n      return;\n    }\n\n    // keyframes\n    if (rule.keyframes) {\n      rule.keyframes.forEach(function(keyframe){\n        fn(keyframe.declarations, rule);\n      });\n      return;\n    }\n\n    // @charset, @import etc\n    if (!rule.declarations) return;\n\n    fn(rule.declarations, node);\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/properties.js\", function(exports, require, module){\n\n/**\n * Prefixed properties.\n */\n\nmodule.exports = [\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'appearance',\n  'background-visibility',\n  'background-composite',\n  'blend-mode',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-fit',\n  'border-image',\n  'border-vertical-spacing',\n  'box-align',\n  'box-direction',\n  'box-flex',\n  'box-flex-group',\n  'box-lines',\n  'box-ordinal-group',\n  'box-orient',\n  'box-pack',\n  'box-reflect',\n  'box-sizing',\n  'clip-path',\n  'column-count',\n  'column-width',\n  'column-min-width',\n  'column-width-policy',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'flex-flow-from',\n  'flex-flow-into',\n  'font-smoothing',\n  'transform',\n  'transform-origin',\n  'transform-origin-x',\n  'transform-origin-y',\n  'transform-origin-z',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'user-drag',\n  'user-modify',\n  'user-select',\n  'wrap',\n  'wrap-flow',\n  'wrap-margin',\n  'wrap-padding',\n  'wrap-through',\n  'overflow-scrolling'\n];\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/function.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit')\n  , utils = require('../utils')\n  , strip = utils.stripQuotes;\n\n/**\n * Define custom function.\n */\n\nmodule.exports = function(functions, args) {\n  if (!functions) throw new Error('functions object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      for (var name in functions) {\n        func(declarations, name, functions[name], args);\n      }\n    });\n  }\n};\n\n/**\n * Escape regexp codes in string.\n *\n * @param {String} s\n * @api private\n */\n\nfunction escape(s) {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n/**\n * Visit declarations and apply functions.\n *\n * @param {Array} declarations\n * @param {Object} functions\n * @param {Boolean} [parseArgs]\n * @api private\n */\n\nfunction func(declarations, name, func, parseArgs) {\n  if (false !== parseArgs) parseArgs = true;\n  var regexp = new RegExp(escape(name) + '\\\\(([^\\)]+)\\\\)', 'g');\n  declarations.forEach(function(decl){\n    if (!~decl.value.indexOf(name + '(')) return;\n    decl.value = decl.value.replace(regexp, function(_, args){\n      if (!parseArgs) return func.call(decl, strip(args));\n      args = args.split(/,\\s*/).map(strip);\n      return func.apply(decl, args);\n    });\n  });\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/url.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , func = require('./function');\n\n/**\n * Map `url()` calls.\n *\n *   body {\n *     background: url(/images/bg.png);\n *   }\n *\n * yields:\n *\n *   body {\n *     background: url(http://example.com/images/bg.png);\n *   }\n *\n */\n\nmodule.exports = function(fn) {\n  return func({\n    url: function(path){\n      return 'url(\"' + fn(path) + '\")';\n    }\n  }, false);\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/vars.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Add variable support.\n *\n *   :root {\n *     var-header-color: #06c;\n *   }\n *\n *   h1 {\n *     background-color: var(header-color);\n *   }\n *\n * yields:\n *\n *   h1 {\n *     background-color: #06c;\n *   }\n *\n */\n\nmodule.exports = function(map) {\n  map = map || {};\n\n  function replace(str) {\n    return str.replace(/\\bvar\\((.*?)\\)/g, function(_, name){\n      var val = map[name];\n      if (!val) throw new Error('variable \"' + name + '\" is undefined');\n      if (val.match(/\\bvar\\(/)) val = replace(val);\n      return val;\n    });\n  }\n\n  return function vars(style){\n    visit.declarations(style, function(declarations, node){\n      // map vars\n      declarations.forEach(function(decl){\n        if (0 != decl.property.indexOf('var-')) return;\n        var name = decl.property.replace('var-', '');\n        map[name] = decl.value;\n      });\n\n      // substitute values\n      declarations.forEach(function(decl){\n        if (!decl.value.match(/\\bvar\\(/)) return;\n        decl.value = replace(decl.value);\n      });\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/ease.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Easing functions.\n */\n\nvar ease = {\n  'ease-in-out-back': 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',\n  'ease-in-out-circ': 'cubic-bezier(0.785, 0.135, 0.150, 0.860)',\n  'ease-in-out-expo': 'cubic-bezier(1.000, 0.000, 0.000, 1.000)',\n  'ease-in-out-sine': 'cubic-bezier(0.445, 0.050, 0.550, 0.950)',\n  'ease-in-out-quint': 'cubic-bezier(0.860, 0.000, 0.070, 1.000)',\n  'ease-in-out-quart': 'cubic-bezier(0.770, 0.000, 0.175, 1.000)',\n  'ease-in-out-cubic': 'cubic-bezier(0.645, 0.045, 0.355, 1.000)',\n  'ease-in-out-quad': 'cubic-bezier(0.455, 0.030, 0.515, 0.955)',\n  'ease-out-back': 'cubic-bezier(0.175, 0.885, 0.320, 1.275)',\n  'ease-out-circ': 'cubic-bezier(0.075, 0.820, 0.165, 1.000)',\n  'ease-out-expo': 'cubic-bezier(0.190, 1.000, 0.220, 1.000)',\n  'ease-out-sine': 'cubic-bezier(0.390, 0.575, 0.565, 1.000)',\n  'ease-out-quint': 'cubic-bezier(0.230, 1.000, 0.320, 1.000)',\n  'ease-out-quart': 'cubic-bezier(0.165, 0.840, 0.440, 1.000)',\n  'ease-out-cubic': 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n  'ease-out-quad': 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n  'ease-in-back': 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',\n  'ease-in-circ': 'cubic-bezier(0.600, 0.040, 0.980, 0.335)',\n  'ease-in-expo': 'cubic-bezier(0.950, 0.050, 0.795, 0.035)',\n  'ease-in-sine': 'cubic-bezier(0.470, 0.000, 0.745, 0.715)',\n  'ease-in-quint': 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n  'ease-in-quart': 'cubic-bezier(0.895, 0.030, 0.685, 0.220)',\n  'ease-in-cubic': 'cubic-bezier(0.550, 0.055, 0.675, 0.190)',\n  'ease-in-quad': 'cubic-bezier(0.550, 0.085, 0.680, 0.530)'\n};\n\n/**\n * Keys.\n */\n\nvar keys = Object.keys(ease);\n\n/**\n * Provide additional easing functions:\n *\n *    #logo {\n *      transition: all 500ms ease-out-back;\n *    }\n *\n * yields:\n *\n *    #logo {\n *      transition: all 500ms cubic-bezier(0.175, 0.885, 0.320, 1.275)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    if (!decl.property.match(/transition|animation|timing/)) continue;\n    for (var k = 0; k < keys.length; ++k) {\n      var key = keys[k];\n      if (~decl.value.indexOf(key)) {\n        decl.value = decl.value.replace(key, ease[key]);\n        break;\n      }\n    }\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/at2x.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , path = require('path')\n  , stripQuotes = utils.stripQuotes;\n\n/**\n * Translate\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n * yields:\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n *   @media all and (-webkit-min-device-pixel-ratio : 1.5) {\n *     .logo {\n *       background-image: url(\"/public/images/logo@2x.png\");\n *       background-size: contain\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.declarations) return;\n\n      var backgroundSize = rule.declarations.filter(backgroundWithSize).map(value)[0] || 'contain';\n\n      rule.declarations.filter(backgroundWithURL).forEach(function(decl){\n        // parse url\n        var i = decl.value.indexOf('url(');\n        var url = stripQuotes(decl.value.slice(i + 4, decl.value.indexOf(')', i)));\n        var ext = path.extname(url);\n\n        // ignore .svg\n        if ('.svg' == ext) return;\n\n        // @2x value\n        url = path.join(path.dirname(url), path.basename(url, ext) + '@2x' + ext);\n\n        // wrap in @media\n        style.rules.push({\n          type: 'media',\n          media: 'all and (-webkit-min-device-pixel-ratio: 1.5)',\n          rules: [\n            {\n              type: 'rule',\n              selectors: rule.selectors,\n              declarations: [\n                {\n                  type: 'declaration',\n                  property: 'background-image',\n                  value: 'url(\"' + url + '\")'\n                },\n                {\n                  type: 'declaration',\n                  property: 'background-size',\n                  value: backgroundSize\n                }\n              ]\n            }\n          ]\n        });\n      });\n    });\n  };\n\n  return function(style, rework) {\n    vendors = vendors || rework.prefixes;\n    visit(style.rules, style);\n  };\n};\n\n/**\n * Filter background[-image] with url().\n */\n\nfunction backgroundWithURL(decl) {\n  return ('background' == decl.property\n    || 'background-image' == decl.property)\n    && ~decl.value.indexOf('url(');\n}\n\n/**\n * Predicate on background-size property.\n */\n\nfunction backgroundWithSize(decl) {\n  return 'background-size' == decl.property;\n}\n\n/**\n * Return value atribute of a declaration.\n */\n\nfunction value(decl) {\n  return decl.value;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/colors.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('color-parser')\n  , functions = require('./function');\n\n/**\n * Provide color manipulation helpers:\n *\n *    button {\n *      background: rgba(#eee, .5)\n *    }\n *\n * yields:\n *\n *    button {\n *      background: rgba(238, 238, 238, .5)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return functions({\n    rgba: function(color, alpha){\n      if (2 == arguments.length) {\n        var c = parse(color.trim());\n        var args = [c.r, c.g, c.b, alpha];\n      } else {\n        var args = [].slice.call(arguments);\n      }\n      \n      return 'rgba(' + args.join(', ') + ')';\n    }\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/extend.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('rework:extend');\n\n/**\n * Add extension support.\n */\n\nmodule.exports = function() {\n  debug('use extend');\n  return function(style, rework) {\n    var map = {};\n    var rules = style.rules.length;\n\n    for (var j = 0; j < rules; j++) {\n      var rule = style.rules[j];\n      if (!rule || !rule.selectors) return;\n\n      // map selectors\n      rule.selectors.forEach(function(sel, i) {\n        map[sel] = rule;\n        if ('%' == sel[0]) rule.selectors.splice(i, 1);\n      });\n\n      // visit extend: properties\n      visit(rule, map);\n\n      // clean up empty rules\n      if (!rule.declarations.length) {\n        style.rules.splice(j--, 1);\n      }\n    };\n  }\n};\n\n/**\n * Visit declarations and extensions.\n *\n * @param {Object} rule\n * @param {Object} map\n * @api private\n */\n\nfunction visit(rule, map) {\n  for (var i = 0; i < rule.declarations.length; ++i) {\n    var decl = rule.declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    if (!/^extends?$/.test(key)) continue;\n\n    var extend = map[val];\n    if (!extend) throw new Error('failed to extend \"' + val + '\"');\n\n    var keys = Object.keys(map);\n    keys.forEach(function(key) {\n      if (0 != key.indexOf(val)) return;\n      var extend = map[key];\n      var suffix = key.replace(val, '');\n      debug('extend %j with %j', rule.selectors, extend.selectors);\n      extend.selectors = extend.selectors.concat(rule.selectors.map(function(sel) {\n        return sel + suffix;\n      }));\n    });\n\n    rule.declarations.splice(i--, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/mixin.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , visit = require('../visit');\n\n/**\n * Define custom mixins.\n */\n\nmodule.exports = function(mixins) {\n  if (!mixins) throw new Error('mixins object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      mixin(declarations, mixins);\n    });\n  }\n};\n\n/**\n * Visit declarations and apply mixins.\n *\n * @param {Array} declarations\n * @param {Object} mixins\n * @api private\n */\n\nfunction mixin(declarations, mixins) {\n  for (var i = 0; i < declarations.length; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    var fn = mixins[key];\n    if (!fn) continue;\n\n    // invoke mixin\n    var ret = fn(val);\n\n    // apply properties\n    for (var key in ret) {\n      declarations.splice(i++, 0, {\n        type: 'declaration',\n        property: key,\n        value: ret[key]\n      });\n    }\n\n    // remove original\n    declarations.splice(i, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/keyframes.js\", function(exports, require, module){\n\n/**\n * Prefix keyframes.\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n * yields:\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n *   @-webkit-keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.keyframes) return;\n\n      vendors.forEach(function(vendor){\n        if (vendor == rule.vendor) return;\n        var clone = cloneKeyframes(rule);\n        clone.vendor = vendor;\n        style.rules.push(clone);\n      });\n    });\n  }\n};\n\n/**\n * Clone keyframes.\n *\n * @param {Object} rule\n * @api private\n */\n\nfunction cloneKeyframes(rule) {\n  var clone = { name: rule.name };\n  clone.type = 'keyframes';\n  clone.vendor = rule.vendor;\n  clone.keyframes = [];\n  rule.keyframes.forEach(function(keyframe){\n    clone.keyframes.push(cloneKeyframe(keyframe));\n  });\n  return clone;\n}\n\n/**\n * Clone `keyframe`.\n *\n * @param {Object} keyframe\n * @api private\n */\n\nfunction cloneKeyframe(keyframe) {\n  var clone = {};\n  clone.type = 'keyframe';\n  clone.values = keyframe.values.slice();\n  clone.declarations = keyframe.declarations.map(function(decl){\n    return {\n      type: 'declaration',\n      property: decl.property,\n      value: decl.value\n    }\n  });\n  return clone;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/references.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Provide property reference support.\n *\n *    button {\n *      width: 50px;\n *      height: @width;\n *      line-height: @height;\n *    }\n *\n * yields:\n *\n *    button {\n *      width: 50px;\n*      height: 50px;\n*      line-height: 50px;\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  var map = {};\n\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n\n    decl.value = val.replace(/@([-\\w]+)/g, function(_, name){\n      if (null == map[name]) throw new Error('@' + name + ' is not defined in this scope');\n      return map[name];\n    });\n\n    map[key] = decl.value;\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", function(exports, require, module){\n\n/**\n * Prefix selectors with `str`.\n *\n *    button {\n *      color: red;\n *    }\n *\n * yields:\n *\n *    #dialog button {\n *      color: red;\n *    }\n *\n */\n\nmodule.exports = function(str) {\n  return function(style){\n    style.rules = style.rules.map(function(rule){\n      if (!rule.selectors) return rule;\n      rule.selectors = rule.selectors.map(function(selector){\n        return str + ' ' + selector;\n      });\n      return rule;\n    });\n  }\n};\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-value.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `value`.\n *\n *    button {\n *      transition: height, transform 2s, width 0.3s linear;\n *    }\n *\n * yields:\n *\n *    button {\n *      -webkit-transition: height, -webkit-transform 2s, width 0.3s linear;\n *      -moz-transition: height, -moz-transform 2s, width 0.3s linear;\n *      transition: height, transform 2s, width 0.3s linear\n *    }\n *\n */\n\nmodule.exports = function(value, vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    visit.declarations(style, function(declarations){\n      for (var i = 0; i < declarations.length; ++i) {\n        var decl = declarations[i];\n        if (!~decl.value.indexOf(value)) continue;\n\n        // ignore vendor-prefixed properties\n        if ('-' == decl.property[0]) continue;\n\n        // ignore vendor-prefixed values\n        if (~decl.value.indexOf('-' + value)) continue;\n\n        // vendor prefixed props\n        vendors.forEach(function(vendor){\n          var prop = 'transition' == decl.property\n            ? vendor + decl.property\n            : decl.property;\n\n          declarations.splice(i++, 0, {\n            type: 'declaration',\n            property: prop,\n            value: decl.value.replace(value, vendor + value)\n          });\n        });\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `prop`.\n *\n *   .button {\n *     border-radius: 5px;\n *   }\n *\n * yields:\n *\n *   .button {\n *     -webkit-border-radius: 5px;\n *     -moz-border-radius: 5px;\n *     border-radius: 5px;\n *   }\n *\n */\n\nmodule.exports = function(prop, vendors) {\n  var props = Array.isArray(prop)\n    ? prop\n    : [prop];\n\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n    visit.declarations(style, function(declarations, node){\n      var only = node.vendor;\n      var isKeyframes = !! node.keyframes;\n\n      for (var i = 0; i < props.length; ++i) {\n        var prop = props[i];\n\n        for (var j = 0, len = declarations.length; j < len; ++j) {\n          var decl = declarations[j];\n          if (prop != decl.property) continue;\n\n          // vendor prefixed props\n          for (var k = 0; k < vendors.length; ++k) {\n            if (!only && isKeyframes) continue;\n            if (only && only != vendors[k]) continue;\n            declarations.push({\n              type: 'declaration',\n              property: vendors[k] + decl.property,\n              value: decl.value\n            });\n          }\n\n          // original prop\n          declarations.push(decl);\n          declarations.splice(j, 1);\n        }\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/index.js\", function(exports, require, module){\n\nexports['border-radius'] = require('./lib/border-radius');\nexports['overflow'] = require('./lib/ellipsis');\nexports['absolute'] = require('./lib/absolute');\nexports['relative'] = require('./lib/relative');\nexports['fixed'] = require('./lib/fixed');\nexports['opacity'] = require('./lib/opacity');\nexports['size'] = require('./lib/size');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/absolute.js\", function(exports, require, module){\n\n/**\n * absolute: top left\n * absolute: top 5px left 5px\n */\n\nmodule.exports = require('./position')('absolute');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/border-radius.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar position = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * border-radius: 5px\n * border-radius: 5px 10px\n * border-radius: top 5px\n * border-radius: top 5px left 10px\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var pos;\n  var ret;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var val = vals[i];\n    if (!position[val]) continue;\n    ret = ret || {};\n    pos = val;\n    val = vals[++i];\n    switch (pos) {\n      case 'top':\n      case 'bottom':\n        ret['border-' + pos + '-left-radius'] = val;\n        ret['border-' + pos + '-right-radius'] = val;\n        break;\n      case 'left':\n      case 'right':\n        ret['border-top-' + pos + '-radius'] = val;\n        ret['border-bottom-' + pos + '-radius'] = val;\n        break;\n    }\n  }\n\n  if (!ret) {\n    return {\n      'border-radius': str\n    }\n  }\n\n  return ret;\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/ellipsis.js\", function(exports, require, module){\n\n/**\n * overflow: ellipsis\n */\n\nmodule.exports = function(type) {\n  if ('ellipsis' == type) {\n    return {\n      'white-space': 'nowrap',\n      'overflow': 'hidden',\n      'text-overflow': 'ellipsis'\n    }\n  }\n\n  return {\n    'overflow': type\n  };\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/fixed.js\", function(exports, require, module){\n\n/**\n * fixed: top left\n * fixed: top 5px left 5px\n */\n\nmodule.exports = require('./position')('fixed');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/opacity.js\", function(exports, require, module){\n\n/**\n * opacity: 1\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var a = parseFloat(vals.shift());\n  var n = a * 100 | 0;\n  var tail = vals.length ? ' ' + vals.join(' '): '';\n  return {\n    'opacity': a + tail,\n    '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=' + n + ')' + tail,\n    'filter': 'alpha(opacity=' + n + ')' + tail\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/position.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar positions = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * Return a mixin for the given position `type`.\n *\n * @param {String} type\n * @return {Function}\n * @api private\n */\n\nmodule.exports = function(type){\n  return function(str){\n    var val;\n    var pos;\n    var ret = {};\n    var vals = str.split(/\\s+/);\n\n    ret.position = type;\n\n    for (var i = 0; i < vals.length; ++i) {\n      val = vals[i];\n      if (positions[val]) {\n        pos = val;\n        ret[pos] = '0';\n      } else {\n        ret[pos] = val;\n      }\n    }\n\n    return ret;\n  };\n}\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/relative.js\", function(exports, require, module){\n\n/**\n * relative: top left\n * relative: top 5px left 5px\n */\n\nmodule.exports = require('./position')('relative');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/size.js\", function(exports, require, module){\n/**\n * size: 100px 50px\n */\n\nmodule.exports = function(sizes) {\n  sizes = sizes.split(/\\s+/);\n  if ( sizes.length == 1 ) sizes[1] = sizes[0];\n\n  return {\n    width:  sizes[0],\n    height: sizes[1]\n  };\n};\n\n});\nrequire.register(\"styl/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar whitespace = require('css-whitespace');\nvar mixins = require('rework-mixins');\nvar rework = require('rework');\nvar props = rework.properties;\n\n/**\n * Expose `Style`.\n */\n\nmodule.exports = Style;\n\n/**\n * Initialize a new Style with the given css `str`.\n *\n * Options:\n *\n *  - `whitespace` utilize css whitespace transformations\n *  - `compress` enable output compression\n *\n * @param {String} str\n * @param {Object} options\n * @api public\n */\n\nfunction Style(str, options) {\n  if (!(this instanceof Style)) return new Style(str, options);\n  options = options || {};\n  if (options.whitespace) str = whitespace(str);\n  this.str = str;\n  this.compress = options.compress;\n  this.rework = rework(str);\n  this.delegate(['vendors', 'use']);\n  this.vendors(['-ms-', '-moz-', '-webkit-']);\n}\n\n/**\n * Delegate `methods` to rework.\n *\n * @param {Array} methods\n * @api private\n */\n\nStyle.prototype.delegate = function(methods){\n  var self = this;\n  methods.forEach(function(method){\n    self[method] = self.rework[method].bind(self.rework);\n  });\n};\n\n/**\n * Return the compiled CSS.\n *\n * @return {String}\n * @api public\n */\n\nStyle.prototype.toString = function(){\n  this.use(rework.mixin(mixins));\n  this.use(rework.keyframes());\n  this.use(rework.ease());\n  this.use(rework.prefixValue('linear-gradient'));\n  this.use(rework.prefixValue('radial-gradient'));\n  this.use(rework.prefixValue('transform'));\n  this.use(rework.prefix(props));\n  this.use(rework.colors());\n  this.use(rework.references());\n  this.use(rework.at2x());\n  this.use(rework.extend());\n  return this.rework.toString({ compress: this.compress });\n};\n\n});\n\n\n\n\n\n\n\nrequire.alias(\"visionmedia-debug/index.js\", \"styl/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"styl/deps/debug/debug.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"debug/index.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/compiler.js\", \"styl/deps/css-whitespace/lib/compiler.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/lexer.js\", \"styl/deps/css-whitespace/lib/lexer.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/parser.js\", \"styl/deps/css-whitespace/lib/parser.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"css-whitespace/index.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-css-whitespace/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-css-whitespace/deps/debug/debug.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"visionmedia-css-whitespace/index.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"styl/deps/rework/index.js\");\nrequire.alias(\"visionmedia-rework/lib/rework.js\", \"styl/deps/rework/lib/rework.js\");\nrequire.alias(\"visionmedia-rework/lib/utils.js\", \"styl/deps/rework/lib/utils.js\");\nrequire.alias(\"visionmedia-rework/lib/visit.js\", \"styl/deps/rework/lib/visit.js\");\nrequire.alias(\"visionmedia-rework/lib/properties.js\", \"styl/deps/rework/lib/properties.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/function.js\", \"styl/deps/rework/lib/plugins/function.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/url.js\", \"styl/deps/rework/lib/plugins/url.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/vars.js\", \"styl/deps/rework/lib/plugins/vars.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/ease.js\", \"styl/deps/rework/lib/plugins/ease.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/at2x.js\", \"styl/deps/rework/lib/plugins/at2x.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/colors.js\", \"styl/deps/rework/lib/plugins/colors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/extend.js\", \"styl/deps/rework/lib/plugins/extend.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/mixin.js\", \"styl/deps/rework/lib/plugins/mixin.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/keyframes.js\", \"styl/deps/rework/lib/plugins/keyframes.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/references.js\", \"styl/deps/rework/lib/plugins/references.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", \"styl/deps/rework/lib/plugins/prefix-selectors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-value.js\", \"styl/deps/rework/lib/plugins/prefix-value.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix.js\", \"styl/deps/rework/lib/plugins/prefix.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"rework/index.js\");\nrequire.alias(\"visionmedia-css/index.js\", \"visionmedia-rework/deps/css/index.js\");\nrequire.alias(\"visionmedia-css-parse/index.js\", \"visionmedia-css/deps/css-parse/index.js\");\n\nrequire.alias(\"visionmedia-css-stringify/index.js\", \"visionmedia-css/deps/css-stringify/index.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/compress.js\", \"visionmedia-css/deps/css-stringify/lib/compress.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/identity.js\", \"visionmedia-css/deps/css-stringify/lib/identity.js\");\n\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-rework/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-rework/deps/debug/debug.js\");\n\nrequire.alias(\"component-color-parser/index.js\", \"visionmedia-rework/deps/color-parser/index.js\");\nrequire.alias(\"component-color-parser/colors.js\", \"visionmedia-rework/deps/color-parser/colors.js\");\n\nrequire.alias(\"component-path/index.js\", \"visionmedia-rework/deps/path/index.js\");\n\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/absolute.js\", \"styl/deps/rework-mixins/lib/absolute.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/border-radius.js\", \"styl/deps/rework-mixins/lib/border-radius.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/ellipsis.js\", \"styl/deps/rework-mixins/lib/ellipsis.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/fixed.js\", \"styl/deps/rework-mixins/lib/fixed.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/opacity.js\", \"styl/deps/rework-mixins/lib/opacity.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/position.js\", \"styl/deps/rework-mixins/lib/position.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/relative.js\", \"styl/deps/rework-mixins/lib/relative.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/size.js\", \"styl/deps/rework-mixins/lib/size.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"visionmedia-rework-mixins/index.js\");\nrequire.alias(\"styl/index.js\", \"styl/index.js\");\n\nmodule.exports = require(\"styl/index.js\");\n",
      "mode": "100644"
    },
    "pixie.cson": {
      "path": "pixie.cson",
      "content": "entryPoint: \"lib/styl\"\nversion: \"0.2.8.1\"\n",
      "mode": "100644"
    },
    "test/test.coffee": {
      "path": "test/test.coffee",
      "content": "styl = require \"../lib/styl\"\n\ndescribe \"styl\", ->\n  it \"should compile a little\", ->\n    console.log styl\n\n    source = \"\"\"\n      body\n        background-color: red\n    \"\"\"\n\n    output = \"\"\"\n      body {\n        background-color: red;\n      }\n    \"\"\"\n\n    assert.equal styl(source, whitespace: true).toString(), output\n",
      "mode": "100644"
    }
  },
  "distribution": {
    "lib/styl": {
      "path": "lib/styl",
      "content": "\n/**\n * Require the given path.\n *\n * @param {String} path\n * @return {Object} exports\n * @api public\n */\n\nfunction require(path, parent, orig) {\n  var resolved = require.resolve(path);\n\n  // lookup failed\n  if (null == resolved) {\n    orig = orig || path;\n    parent = parent || 'root';\n    var err = new Error('Failed to require \"' + orig + '\" from \"' + parent + '\"');\n    err.path = orig;\n    err.parent = parent;\n    err.require = true;\n    throw err;\n  }\n\n  var module = require.modules[resolved];\n\n  // perform real require()\n  // by invoking the module's\n  // registered function\n  if (!module.exports) {\n    module.exports = {};\n    module.client = module.component = true;\n    module.call(this, module.exports, require.relative(resolved), module);\n  }\n\n  return module.exports;\n}\n\n/**\n * Registered modules.\n */\n\nrequire.modules = {};\n\n/**\n * Registered aliases.\n */\n\nrequire.aliases = {};\n\n/**\n * Resolve `path`.\n *\n * Lookup:\n *\n *   - PATH/index.js\n *   - PATH.js\n *   - PATH\n *\n * @param {String} path\n * @return {String} path or null\n * @api private\n */\n\nrequire.resolve = function(path) {\n  if (path.charAt(0) === '/') path = path.slice(1);\n\n  var paths = [\n    path,\n    path + '.js',\n    path + '.json',\n    path + '/index.js',\n    path + '/index.json'\n  ];\n\n  for (var i = 0; i < paths.length; i++) {\n    var path = paths[i];\n    if (require.modules.hasOwnProperty(path)) return path;\n    if (require.aliases.hasOwnProperty(path)) return require.aliases[path];\n  }\n};\n\n/**\n * Normalize `path` relative to the current path.\n *\n * @param {String} curr\n * @param {String} path\n * @return {String}\n * @api private\n */\n\nrequire.normalize = function(curr, path) {\n  var segs = [];\n\n  if ('.' != path.charAt(0)) return path;\n\n  curr = curr.split('/');\n  path = path.split('/');\n\n  for (var i = 0; i < path.length; ++i) {\n    if ('..' == path[i]) {\n      curr.pop();\n    } else if ('.' != path[i] && '' != path[i]) {\n      segs.push(path[i]);\n    }\n  }\n\n  return curr.concat(segs).join('/');\n};\n\n/**\n * Register module at `path` with callback `definition`.\n *\n * @param {String} path\n * @param {Function} definition\n * @api private\n */\n\nrequire.register = function(path, definition) {\n  require.modules[path] = definition;\n};\n\n/**\n * Alias a module definition.\n *\n * @param {String} from\n * @param {String} to\n * @api private\n */\n\nrequire.alias = function(from, to) {\n  if (!require.modules.hasOwnProperty(from)) {\n    throw new Error('Failed to alias \"' + from + '\", it does not exist');\n  }\n  require.aliases[to] = from;\n};\n\n/**\n * Return a require function relative to the `parent` path.\n *\n * @param {String} parent\n * @return {Function}\n * @api private\n */\n\nrequire.relative = function(parent) {\n  var p = require.normalize(parent, '..');\n\n  /**\n   * lastIndexOf helper.\n   */\n\n  function lastIndexOf(arr, obj) {\n    var i = arr.length;\n    while (i--) {\n      if (arr[i] === obj) return i;\n    }\n    return -1;\n  }\n\n  /**\n   * The relative require() itself.\n   */\n\n  function localRequire(path) {\n    var resolved = localRequire.resolve(path);\n    return require(resolved, parent, path);\n  }\n\n  /**\n   * Resolve relative to the parent.\n   */\n\n  localRequire.resolve = function(path) {\n    var c = path.charAt(0);\n    if ('/' == c) return path.slice(1);\n    if ('.' == c) return require.normalize(p, path);\n\n    // resolve deps by returning\n    // the dep in the nearest \"deps\"\n    // directory\n    var segs = parent.split('/');\n    var i = lastIndexOf(segs, 'deps') + 1;\n    if (!i) i = 0;\n    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;\n    return path;\n  };\n\n  /**\n   * Check if module is defined at `path`.\n   */\n\n  localRequire.exists = function(path) {\n    return require.modules.hasOwnProperty(localRequire.resolve(path));\n  };\n\n  return localRequire;\n};\nrequire.register(\"visionmedia-debug/index.js\", function(exports, require, module){\nif ('undefined' == typeof window) {\n  module.exports = require('./lib/debug');\n} else {\n  module.exports = require('./debug');\n}\n\n});\nrequire.register(\"visionmedia-debug/debug.js\", function(exports, require, module){\n\n/**\n * Expose `debug()` as the module.\n */\n\nmodule.exports = debug;\n\n/**\n * Create a debugger with the given `name`.\n *\n * @param {String} name\n * @return {Type}\n * @api public\n */\n\nfunction debug(name) {\n  if (!debug.enabled(name)) return function(){};\n\n  return function(fmt){\n    fmt = coerce(fmt);\n\n    var curr = new Date;\n    var ms = curr - (debug[name] || curr);\n    debug[name] = curr;\n\n    fmt = name\n      + ' '\n      + fmt\n      + ' +' + debug.humanize(ms);\n\n    // This hackery is required for IE8\n    // where `console.log` doesn't have 'apply'\n    window.console\n      && console.log\n      && Function.prototype.apply.call(console.log, console, arguments);\n  }\n}\n\n/**\n * The currently active debug mode names.\n */\n\ndebug.names = [];\ndebug.skips = [];\n\n/**\n * Enables a debug mode by name. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} name\n * @api public\n */\n\ndebug.enable = function(name) {\n  try {\n    localStorage.debug = name;\n  } catch(e){}\n\n  var split = (name || '').split(/[\\s,]+/)\n    , len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    name = split[i].replace('*', '.*?');\n    if (name[0] === '-') {\n      debug.skips.push(new RegExp('^' + name.substr(1) + '$'));\n    }\n    else {\n      debug.names.push(new RegExp('^' + name + '$'));\n    }\n  }\n};\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\ndebug.disable = function(){\n  debug.enable('');\n};\n\n/**\n * Humanize the given `ms`.\n *\n * @param {Number} m\n * @return {String}\n * @api private\n */\n\ndebug.humanize = function(ms) {\n  var sec = 1000\n    , min = 60 * 1000\n    , hour = 60 * min;\n\n  if (ms >= hour) return (ms / hour).toFixed(1) + 'h';\n  if (ms >= min) return (ms / min).toFixed(1) + 'm';\n  if (ms >= sec) return (ms / sec | 0) + 's';\n  return ms + 'ms';\n};\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\ndebug.enabled = function(name) {\n  for (var i = 0, len = debug.skips.length; i < len; i++) {\n    if (debug.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (var i = 0, len = debug.names.length; i < len; i++) {\n    if (debug.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Coerce `val`.\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n// persist\n\nif (window.localStorage) debug.enable(localStorage.debug);\n\n});\nrequire.register(\"visionmedia-css-whitespace/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('./lib/parser');\nvar compile = require('./lib/compiler');\n\n/**\n * Compile a whitespace significant\n * `str` of CSS to the valid CSS\n * equivalent.\n *\n * @param {String} str\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(str){\n  return compile(parse(str));\n};\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/compiler.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:parser');\n\n/**\n * Compile the given `node`.\n *\n * @param {Array} node\n * @return {String}\n * @api private\n */\n\nmodule.exports = function(node){\n  var indents = 0;\n  var rules = [];\n  var stash = [];\n  var level = 0;\n  var nest = 0;\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(node, false, 12, true));\n  }\n\n  return visit(node);\n\n  /**\n   * Visit `node`.\n   */\n\n  function visit(node) {\n    switch (node[0]) {\n      case 'root':\n        return root(node);\n      case 'rule':\n        if ('@' == node[1][0][0]) ++nest;\n        var ret = rule(node);\n        if ('@' == node[1][0][0]) --nest;\n        return ret;\n      case 'block':\n        ++level;\n        var ret = block(node);\n        --level;\n        return ret;\n      case 'prop':\n        return prop(node);\n      case 'comment':\n        return comment(node);\n      default:\n        throw new Error('invalid node \"' + node[0] + '\"');\n    }\n  }\n\n  /**\n   * Visit block.\n   */\n\n  function block(node) {\n    var buf = [];\n    var nodes = node[1];\n\n    for (var i = 0; i < nodes.length; ++i) {\n      buf.push(visit(nodes[i]));\n    }\n\n    return buf.join('');\n  }\n\n  /**\n   * Visit comment.\n   */\n\n  function comment(node) {\n    return indent() + '/*' + node[1] + '*/\\n';\n  }\n\n  /**\n   * Visit prop.\n   */\n\n  function prop(node) {\n    var prop = node[1];\n    var val = node[2];\n    return indent() + prop + ': ' + val + ';\\n';\n  }\n\n  /**\n   * Visit rule.\n   */\n\n  function rule(node) {\n    var font = '@font-face' == node[1][0].trim();\n    var rule = node[1];\n    var block = node[2];\n    var buf = '';\n\n    if (!block) return rule.join('') + ';';\n\n    rules.push(node);\n\n    if ('@' == rule[0][0] && !font) {\n      buf = join(rules) + ' {\\n';\n      visit(block);\n      buf += stash.join('\\n');\n      buf += '\\n}';\n      stash = [];\n    } else if (nest && !font) {\n      indents = 1;\n      buf = join(rules, 1) + ' {\\n';\n      indents = 2;\n      buf += visit(block);\n      buf += '  }';\n      indents = 1;\n    } else {\n      indents = 0;\n      buf = join(rules) + ' {\\n'\n      indents = 1;\n      buf += visit(block);\n      indents = 0;\n      buf += '}';\n      if (!hasProperties(block)) buf = '';\n    }\n\n    if (rules.length > 1) {\n      if (hasProperties(block)) stash.push(buf);\n      buf = '';\n    }\n\n    rules.pop();\n\n    return buf;\n  }\n\n  /**\n   * Visit root.\n   */\n\n  function root(node) {\n    var buf = [];\n    for (var i = 0; i < node[1].length; ++i) {\n      buf.push(visit(node[1][i]));\n      if (stash.length) {\n        buf = buf.concat(stash);\n        stash = [];\n      }\n    }\n    return buf.join('\\n\\n');\n  }\n\n  /**\n   * Join the given rules.\n   *\n   * @param {Array} rules\n   * @param {Number} [offset]\n   * @return {String}\n   * @api private\n   */\n\n  function join(rules, offset) {\n    offset = offset || 0;\n    var selectors = [];\n    var buf = [];\n    var curr;\n    var next;\n\n    function compile(rules, i) {\n      if (offset != i) {\n        rules[i][1].forEach(function(selector){\n          var parent = ~selector.indexOf('&');\n          selector = selector.replace('&', '');\n          buf.unshift(parent ? selector : ' ' + selector);\n          compile(rules, i - 1);\n          buf.shift();\n        });\n      } else {\n        rules[i][1].forEach(function(selector){\n          var tail = buf.join('');\n          selectors.push(indent() + selector + tail);\n        });\n      }\n    }\n\n    compile(rules, rules.length - 1);\n\n    return selectors.join(',\\n');\n  }\n\n  /**\n   * Return indent.\n   */\n\n  function indent() {\n    return Array(indents + 1).join('  ');\n  }\n};\n\n/**\n * Check if `block` has properties.\n *\n * @param {Array} block\n * @return {Boolean}\n * @api private\n */\n\nfunction hasProperties(block) {\n  var nodes = block[1];\n  for (var i = 0; i < nodes.length; ++i) {\n    if ('prop' == nodes[i][0]) return true;\n  }\n  return false;\n}\n\n/**\n * Blank string filter.\n *\n * @api private\n */\n\nfunction blank(str) {\n  return '' != str;\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/lexer.js\", function(exports, require, module){\n\n/**\n * Pesudo selectors.\n */\n\nvar pseudos = [\n  ':selection',\n  'fullscreen',\n  'nth-child',\n  'first-child',\n  'last-child',\n  'link',\n  'visited',\n  'hover',\n  'active',\n  'focus',\n  'first-letter',\n  'first-line',\n  'before',\n  'after',\n  'lang',\n  'enabled',\n  'disabled',\n  'only-child',\n  'only-of-type',\n  'first-of-type',\n  'last-of-type',\n  'nth-last-of-type',\n  'nth-of-type',\n  'root',\n  'empty',\n  'target',\n  'not',\n  '-o',\n  '-ms',\n  '-moz',\n  '-webkit'\n]\n\n/**\n * Property regexp.\n */\n\npseudos = pseudos.join('|');\nvar propre = new RegExp('^ *([-\\\\w]+):(?!' + pseudos + ') *([^\\n]*)');\n\n/**\n * Scan the given `str` returning tokens.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var indents = [0];\n  var stash = [];\n\n  // strip blanks\n  str = str.replace(/\\r/g, '');\n  str = str.replace(/\\n\\s*\\n/gm, '\\n');\n\n  return scan();\n\n  /**\n   * tok+\n   */\n\n  function scan() {\n    var toks = []\n      , curr;\n\n    while (str.length) {\n      curr = next();\n      curr && toks.push(curr);\n      if (str.length && !curr) {\n        throw new Error('syntax error near \"' + str.slice(0, 10) + '\"');\n      }\n    }\n\n    toks = toks.concat(stash);\n    while (indents.pop()) toks.push(['outdent']);\n    toks.push(['eos']);\n    return toks;\n  }\n\n  /**\n   *   eos\n   * | indentation\n   * | rule\n   */\n\n  function next() {\n    return stashed()\n      || comment()\n      || csscomment()\n      || indentation()\n      || prop()\n      || rule();\n  }\n\n  /**\n   * Deferred tokens.\n   */\n\n  function stashed() {\n    return stash.shift();\n  }\n\n  /**\n   * Comment.\n   */\n\n  function comment() {\n    var m = str.match(/^\\/\\/([^\\n]*)/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return next();\n  }\n\n  /**\n   * Multiline comment.\n   */\n\n  function csscomment() {\n    if ('/' != str[0] || '*' != str[1]) return;\n    str = str.slice(2);\n\n    var i = 0;\n    while ('*' != str[i] && '/' != str[i + 1]) ++i;\n\n    var buf = str.slice(0, i);\n    str = str.slice(buf.length + 2);\n\n    return ['comment', buf];\n  }\n\n  /**\n   *   INDENT\n   * | OUTDENT\n   */\n\n  function indentation() {\n    var spaces = str.match(/^\\n( *)/);\n    if (!spaces) return;\n    str = str.slice(spaces[0].length);\n    spaces = spaces[1].length;\n    var prev = indents[indents.length - 1];\n\n    // INDENT\n    if (spaces > prev) return indent(spaces);\n\n    // OUTDENT\n    if (spaces < prev) return outdent(spaces);\n\n    return next();\n  }\n\n  /**\n   * Indent.\n   */\n\n  function indent(spaces) {\n    indents.push(spaces);\n    return ['indent'];\n  }\n\n  /**\n   * Outdent.\n   */\n\n  function outdent(spaces) {\n    while (indents[indents.length - 1] > spaces) {\n      indents.pop();\n      stash.push(['outdent']);\n    }\n    return stashed();\n  }\n\n  /**\n   * Property.\n   */\n\n  function prop() {\n    var m = str.match(propre);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    return ['prop', m[1], m[2]];\n  }\n\n  /**\n   * Rule.\n   */\n\n  function rule() {\n    var m = str.match(/^([^\\n,]+, *\\n|[^\\n]+)+/);\n    if (!m) return;\n    str = str.slice(m[0].length);\n    m = m[0].split(/\\s*,\\s*/);\n    return ['rule', m];\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-whitespace/lib/parser.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('css-whitespace:lexer');\nvar scan = require('./lexer');\n\n/**\n * Parse the given `str`, returning an AST.\n *\n * @param {String} str\n * @return {Array}\n * @api private\n */\n\nmodule.exports = function(str) {\n  var toks = scan(str);\n\n  if (debug.enabled) {\n    var util = require('util');\n    console.log(util.inspect(toks, false, 12, true));\n  }\n\n  return stmts();\n\n  /**\n   * Grab the next token.\n   */\n\n  function next() {\n    return toks.shift();\n  }\n\n  /**\n   * Check if the next token is `type`.\n   */\n\n  function is(type) {\n    if (type == toks[0][0]) return true;\n  }\n\n  /**\n   * Expect `type` or throw.\n   */\n\n  function expect(type) {\n    if (is(type)) return next();\n    throw new Error('expected \"' + type + '\", but got \"' + toks[0][0] + '\"');\n  }\n\n  /**\n   * stmt+\n   */\n\n  function stmts() {\n    var stmts = [];\n    while (!is('eos')) stmts.push(stmt());\n    return ['root', stmts];\n  }\n\n  /**\n   * INDENT stmt+ OUTDENT\n   */\n\n  function block() {\n    var props = [];\n    expect('indent');\n    while (!is('outdent')) props.push(stmt());\n    expect('outdent');\n    return ['block', props];\n  }\n\n  /**\n   *   rule\n   * | prop\n   */\n\n  function stmt() {\n    if (is('rule')) return rule();\n    if (is('prop')) return prop();\n    return next();\n  }\n\n  /**\n   *   prop\n   * | prop INDENT rule* OUTDENT\n   */\n\n  function prop() {\n    var prop = next();\n    if (is('indent')) {\n      next();\n      while (!is('outdent')) {\n        var tok = next();\n        prop[2] += ' ' + tok[1].join(', ');\n      }\n      expect('outdent');\n    }\n    return prop;\n  }\n\n  /**\n   * rule block?\n   */\n\n  function rule() {\n    var rule = next();\n    if (is('indent')) rule.push(block());\n    return rule;\n  }\n}\n\n});\nrequire.register(\"visionmedia-css-parse/index.js\", function(exports, require, module){\n\nmodule.exports = function(css, options){\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   */\n\n  function updatePosition(str) {\n    var lines = str.match(/\\n/g);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf('\\n');\n    column = ~i ? str.length-i : column + str.length;\n  }\n\n  function position() {\n    var start = { line: lineno, column: column };\n    if (!options.position) return positionNoop;\n    return function(node){\n      node.position = {\n        start: start,\n        end: { line: lineno, column: column }\n      };\n      whitespace();\n      return node;\n    }\n  }\n\n  /**\n   * Return `node`.\n   */\n  function positionNoop(node) {\n    whitespace();\n    return node;\n  }\n\n  /**\n   * Parse stylesheet.\n   */\n\n  function stylesheet() {\n    return {\n      type: 'stylesheet',\n      stylesheet: {\n        rules: rules()\n      }\n    };\n  }\n\n  /**\n   * Opening brace.\n   */\n\n  function open() {\n    return match(/^{\\s*/);\n  }\n\n  /**\n   * Closing brace.\n   */\n\n  function close() {\n    return match(/^}/);\n  }\n\n  /**\n   * Parse ruleset.\n   */\n\n  function rules() {\n    var node;\n    var rules = [];\n    whitespace();\n    comments(rules);\n    while (css[0] != '}' && (node = atrule() || rule())) {\n      rules.push(node);\n      comments(rules);\n    }\n    return rules;\n  }\n\n  /**\n   * Match `re` and return captures.\n   */\n\n  function match(re) {\n    var m = re.exec(css);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    css = css.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n\n  function whitespace() {\n    match(/^\\s*/);\n  }\n\n  /**\n   * Parse comments;\n   */\n\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while (c = comment()) rules.push(c);\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   */\n\n  function comment() {\n    var pos = position();\n    if ('/' != css[0] || '*' != css[1]) return;\n\n    var i = 2;\n    while (null != css[i] && ('*' != css[i] || '/' != css[i + 1])) ++i;\n    i += 2;\n\n    var str = css.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    css = css.slice(i);\n    column += 2;\n    return pos({\n      type: 'comment',\n      comment: str\n    });\n  }\n\n  /**\n   * Parse selector.\n   */\n\n  function selector() {\n    var m = match(/^([^{]+)/);\n    if (!m) return;\n    return m[0].trim().split(/\\s*,\\s*/);\n  }\n\n  /**\n   * Parse declaration.\n   */\n\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(/^(\\*?[-\\w]+)\\s*/);\n    if (!prop) return;\n    prop = prop[0];\n\n    // :\n    if (!match(/^:\\s*/)) return;\n\n    // val\n    var val = match(/^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^\\)]*?\\)|[^};])+)/);\n    if (!val) return;\n\n    var ret = pos({\n      type: 'declaration',\n      property: prop,\n      value: val[0].trim()\n    });\n\n    // ;\n    match(/^[;\\s]*/);\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   */\n\n  function declarations() {\n    var decls = [];\n\n    if (!open()) return;\n    comments(decls);\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments(decls);\n    }\n\n    if (!close()) return;\n    return decls;\n  }\n\n  /**\n   * Parse keyframe.\n   */\n\n  function keyframe() {\n    var m;\n    var vals = [];\n    var pos = position();\n\n    while (m = match(/^(from|to|\\d+%|\\.\\d+%|\\d+\\.\\d+%)\\s*/)) {\n      vals.push(m[1]);\n      match(/^,\\s*/);\n    }\n\n    if (!vals.length) return;\n\n    return pos({\n      type: 'keyframe',\n      values: vals,\n      declarations: declarations()\n    });\n  }\n\n  /**\n   * Parse keyframes.\n   */\n\n  function atkeyframes() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?keyframes */);\n\n    if (!m) return;\n    var vendor = m[1];\n\n    // identifier\n    var m = match(/^([-\\w]+)\\s*/);\n    if (!m) return;\n    var name = m[1];\n\n    if (!open()) return;\n    comments();\n\n    var frame;\n    var frames = [];\n    while (frame = keyframe()) {\n      frames.push(frame);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'keyframes',\n      name: name,\n      vendor: vendor,\n      keyframes: frames\n    });\n  }\n\n  /**\n   * Parse supports.\n   */\n\n  function atsupports() {\n    var pos = position();\n    var m = match(/^@supports *([^{]+)/);\n\n    if (!m) return;\n    var supports = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'supports',\n      supports: supports,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse media.\n   */\n\n  function atmedia() {\n    var pos = position();\n    var m = match(/^@media *([^{]+)/);\n\n    if (!m) return;\n    var media = m[1].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'media',\n      media: media,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse paged media.\n   */\n\n  function atpage() {\n    var pos = position();\n    var m = match(/^@page */);\n    if (!m) return;\n\n    var sel = selector() || [];\n    var decls = [];\n\n    if (!open()) return;\n    comments();\n\n    // declarations\n    var decl;\n    while (decl = declaration()) {\n      decls.push(decl);\n      comments();\n    }\n\n    if (!close()) return;\n\n    return pos({\n      type: 'page',\n      selectors: sel,\n      declarations: decls\n    });\n  }\n\n  /**\n   * Parse document.\n   */\n\n  function atdocument() {\n    var pos = position();\n    var m = match(/^@([-\\w]+)?document *([^{]+)/);\n    if (!m) return;\n\n    var vendor = m[1].trim();\n    var doc = m[2].trim();\n\n    if (!open()) return;\n    comments();\n\n    var style = rules();\n\n    if (!close()) return;\n\n    return pos({\n      type: 'document',\n      document: doc,\n      vendor: vendor,\n      rules: style\n    });\n  }\n\n  /**\n   * Parse import\n   */\n\n  function atimport() {\n    return _atrule('import');\n  }\n\n  /**\n   * Parse charset\n   */\n\n  function atcharset() {\n    return _atrule('charset');\n  }\n\n  /**\n   * Parse namespace\n   */\n\n  function atnamespace() {\n    return _atrule('namespace')\n  }\n\n  /**\n   * Parse non-block at-rules\n   */\n\n  function _atrule(name) {\n    var pos = position();\n    var m = match(new RegExp('^@' + name + ' *([^;\\\\n]+);'));\n    if (!m) return;\n    var ret = { type: name };\n    ret[name] = m[1].trim();\n    return pos(ret);\n  }\n\n  /**\n   * Parse at rule.\n   */\n\n  function atrule() {\n    return atkeyframes()\n      || atmedia()\n      || atsupports()\n      || atimport()\n      || atcharset()\n      || atnamespace()\n      || atdocument()\n      || atpage();\n  }\n\n  /**\n   * Parse rule.\n   */\n\n  function rule() {\n    var pos = position();\n    var sel = selector();\n\n    if (!sel) return;\n    comments();\n\n    return pos({\n      type: 'rule',\n      selectors: sel,\n      declarations: declarations()\n    });\n  }\n\n  return stylesheet();\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar Compressed = require('./lib/compress');\nvar Identity = require('./lib/identity');\n\n/**\n * Stringfy the given AST `node`.\n *\n * @param {Object} node\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nmodule.exports = function(node, options){\n  if (options.compress) {\n    return new Compressed(options).compile(node);\n  }\n\n  return new Identity(options).compile(node);\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/compress.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  if (this.compress) return '';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc\n    + '{'\n    + node.rules.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + '{'\n    + node.keyframes.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return node.values.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var decls = node.declarations;\n  if (!decls.length) return '';\n\n  return node.selectors.join(',')\n    + '{'\n    + decls.map(this.visit, this).join('')\n    + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return node.property + ':' + node.value + ';';\n};\n\n\n});\nrequire.register(\"visionmedia-css-stringify/lib/identity.js\", function(exports, require, module){\n\n/**\n * Expose compiler.\n */\n\nmodule.exports = Compiler;\n\n/**\n * Initialize a new `Compiler`.\n */\n\nfunction Compiler(options) {\n  options = options || {};\n  this.indentation = options.indent;\n}\n\n/**\n * Compile `node`.\n */\n\nCompiler.prototype.compile = function(node){\n  return node.stylesheet\n    .rules.map(this.visit, this)\n    .join('\\n\\n');\n};\n\n/**\n * Visit `node`.\n */\n\nCompiler.prototype.visit = function(node){\n  return this[node.type](node);\n};\n\n/**\n * Visit comment node.\n */\n\nCompiler.prototype.comment = function(node){\n  return this.indent() + '/*' + node.comment + '*/';\n};\n\n/**\n * Visit import node.\n */\n\nCompiler.prototype.import = function(node){\n  return '@import ' + node.import + ';';\n};\n\n/**\n * Visit media node.\n */\n\nCompiler.prototype.media = function(node){\n  return '@media '\n    + node.media\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit document node.\n */\n\nCompiler.prototype.document = function(node){\n  var doc = '@' + (node.vendor || '') + 'document ' + node.document;\n\n  return doc + ' '\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit charset node.\n */\n\nCompiler.prototype.charset = function(node){\n  return '@charset ' + node.charset + ';\\n';\n};\n\n/**\n * Visit supports node.\n */\n\nCompiler.prototype.supports = function(node){\n  return '@supports '\n    + node.supports\n    + ' {\\n'\n    + this.indent(1)\n    + node.rules.map(this.visit, this).join('\\n\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit keyframes node.\n */\n\nCompiler.prototype.keyframes = function(node){\n  return '@'\n    + (node.vendor || '')\n    + 'keyframes '\n    + node.name\n    + ' {\\n'\n    + this.indent(1)\n    + node.keyframes.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '}';\n};\n\n/**\n * Visit keyframe node.\n */\n\nCompiler.prototype.keyframe = function(node){\n  var decls = node.declarations;\n\n  return this.indent()\n    + node.values.join(', ')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}\\n';\n};\n\n/**\n * Visit page node.\n */\n\nCompiler.prototype.page = function(node){\n  var sel = node.selectors.length\n    ? node.selectors.join(', ') + ' '\n    : '';\n\n  return '@page ' + sel\n    + '{\\n'\n    + this.indent(1)\n    + node.declarations.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n}';\n};\n\n/**\n * Visit rule node.\n */\n\nCompiler.prototype.rule = function(node){\n  var indent = this.indent();\n  var decls = node.declarations;\n\n  return node.selectors.map(function(s){ return indent + s }).join(',\\n')\n    + ' {\\n'\n    + this.indent(1)\n    + decls.map(this.visit, this).join('\\n')\n    + this.indent(-1)\n    + '\\n' + this.indent() + '}';\n};\n\n/**\n * Visit declaration node.\n */\n\nCompiler.prototype.declaration = function(node){\n  return this.indent() + node.property + ': ' + node.value + ';';\n};\n\n/**\n * Increase, decrease or return current indentation.\n */\n\nCompiler.prototype.indent = function(level) {\n  this.level = this.level || 1;\n\n  if (null != level) {\n    this.level += level;\n    return '';\n  }\n\n  return Array(this.level).join(this.indentation || '  ');\n};\n\n});\nrequire.register(\"visionmedia-css/index.js\", function(exports, require, module){\n\nexports.parse = require('css-parse');\nexports.stringify = require('css-stringify');\n\n});\nrequire.register(\"component-color-parser/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar colors = require('./colors');\n\n/**\n * Expose `parse`.\n */\n\nmodule.exports = parse;\n\n/**\n * Parse `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api public\n */\n\nfunction parse(str) {\n  return named(str)\n    || hex3(str)\n    || hex6(str)\n    || rgb(str)\n    || rgba(str);\n}\n\n/**\n * Parse named css color `str`.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction named(str) {\n  var c = colors[str.toLowerCase()];\n  if (!c) return;\n  return {\n    r: c[0],\n    g: c[1],\n    b: c[2]\n  }\n}\n\n/**\n * Parse rgb(n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgb(str) {\n  if (0 == str.indexOf('rgb(')) {\n    str = str.match(/rgb\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse rgba(n, n, n, n)\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction rgba(str) {\n  if (0 == str.indexOf('rgba(')) {\n    str = str.match(/rgba\\(([^)]+)\\)/)[1];\n    var parts = str.split(/ *, */).map(Number);\n    return {\n      r: parts[0],\n      g: parts[1],\n      b: parts[2],\n      a: parts[3]\n    }\n  }\n}\n\n/**\n * Parse #nnnnnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex6(str) {\n  if ('#' == str[0] && 7 == str.length) {\n    return {\n      r: parseInt(str.slice(1, 3), 16),\n      g: parseInt(str.slice(3, 5), 16),\n      b: parseInt(str.slice(5, 7), 16),\n      a: 1\n    }\n  }\n}\n\n/**\n * Parse #nnn\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction hex3(str) {\n  if ('#' == str[0] && 4 == str.length) {\n    return {\n      r: parseInt(str[1] + str[1], 16),\n      g: parseInt(str[2] + str[2], 16),\n      b: parseInt(str[3] + str[3], 16),\n      a: 1\n    }\n  }\n}\n\n\n});\nrequire.register(\"component-color-parser/colors.js\", function(exports, require, module){\n\nmodule.exports = {\n    aliceblue: [240, 248, 255]\n  , antiquewhite: [250, 235, 215]\n  , aqua: [0, 255, 255]\n  , aquamarine: [127, 255, 212]\n  , azure: [240, 255, 255]\n  , beige: [245, 245, 220]\n  , bisque: [255, 228, 196]\n  , black: [0, 0, 0]\n  , blanchedalmond: [255, 235, 205]\n  , blue: [0, 0, 255]\n  , blueviolet: [138, 43, 226]\n  , brown: [165, 42, 42]\n  , burlywood: [222, 184, 135]\n  , cadetblue: [95, 158, 160]\n  , chartreuse: [127, 255, 0]\n  , chocolate: [210, 105, 30]\n  , coral: [255, 127, 80]\n  , cornflowerblue: [100, 149, 237]\n  , cornsilk: [255, 248, 220]\n  , crimson: [220, 20, 60]\n  , cyan: [0, 255, 255]\n  , darkblue: [0, 0, 139]\n  , darkcyan: [0, 139, 139]\n  , darkgoldenrod: [184, 132, 11]\n  , darkgray: [169, 169, 169]\n  , darkgreen: [0, 100, 0]\n  , darkgrey: [169, 169, 169]\n  , darkkhaki: [189, 183, 107]\n  , darkmagenta: [139, 0, 139]\n  , darkolivegreen: [85, 107, 47]\n  , darkorange: [255, 140, 0]\n  , darkorchid: [153, 50, 204]\n  , darkred: [139, 0, 0]\n  , darksalmon: [233, 150, 122]\n  , darkseagreen: [143, 188, 143]\n  , darkslateblue: [72, 61, 139]\n  , darkslategray: [47, 79, 79]\n  , darkslategrey: [47, 79, 79]\n  , darkturquoise: [0, 206, 209]\n  , darkviolet: [148, 0, 211]\n  , deeppink: [255, 20, 147]\n  , deepskyblue: [0, 191, 255]\n  , dimgray: [105, 105, 105]\n  , dimgrey: [105, 105, 105]\n  , dodgerblue: [30, 144, 255]\n  , firebrick: [178, 34, 34]\n  , floralwhite: [255, 255, 240]\n  , forestgreen: [34, 139, 34]\n  , fuchsia: [255, 0, 255]\n  , gainsboro: [220, 220, 220]\n  , ghostwhite: [248, 248, 255]\n  , gold: [255, 215, 0]\n  , goldenrod: [218, 165, 32]\n  , gray: [128, 128, 128]\n  , green: [0, 128, 0]\n  , greenyellow: [173, 255, 47]\n  , grey: [128, 128, 128]\n  , honeydew: [240, 255, 240]\n  , hotpink: [255, 105, 180]\n  , indianred: [205, 92, 92]\n  , indigo: [75, 0, 130]\n  , ivory: [255, 255, 240]\n  , khaki: [240, 230, 140]\n  , lavender: [230, 230, 250]\n  , lavenderblush: [255, 240, 245]\n  , lawngreen: [124, 252, 0]\n  , lemonchiffon: [255, 250, 205]\n  , lightblue: [173, 216, 230]\n  , lightcoral: [240, 128, 128]\n  , lightcyan: [224, 255, 255]\n  , lightgoldenrodyellow: [250, 250, 210]\n  , lightgray: [211, 211, 211]\n  , lightgreen: [144, 238, 144]\n  , lightgrey: [211, 211, 211]\n  , lightpink: [255, 182, 193]\n  , lightsalmon: [255, 160, 122]\n  , lightseagreen: [32, 178, 170]\n  , lightskyblue: [135, 206, 250]\n  , lightslategray: [119, 136, 153]\n  , lightslategrey: [119, 136, 153]\n  , lightsteelblue: [176, 196, 222]\n  , lightyellow: [255, 255, 224]\n  , lime: [0, 255, 0]\n  , limegreen: [50, 205, 50]\n  , linen: [250, 240, 230]\n  , magenta: [255, 0, 255]\n  , maroon: [128, 0, 0]\n  , mediumaquamarine: [102, 205, 170]\n  , mediumblue: [0, 0, 205]\n  , mediumorchid: [186, 85, 211]\n  , mediumpurple: [147, 112, 219]\n  , mediumseagreen: [60, 179, 113]\n  , mediumslateblue: [123, 104, 238]\n  , mediumspringgreen: [0, 250, 154]\n  , mediumturquoise: [72, 209, 204]\n  , mediumvioletred: [199, 21, 133]\n  , midnightblue: [25, 25, 112]\n  , mintcream: [245, 255, 250]\n  , mistyrose: [255, 228, 225]\n  , moccasin: [255, 228, 181]\n  , navajowhite: [255, 222, 173]\n  , navy: [0, 0, 128]\n  , oldlace: [253, 245, 230]\n  , olive: [128, 128, 0]\n  , olivedrab: [107, 142, 35]\n  , orange: [255, 165, 0]\n  , orangered: [255, 69, 0]\n  , orchid: [218, 112, 214]\n  , palegoldenrod: [238, 232, 170]\n  , palegreen: [152, 251, 152]\n  , paleturquoise: [175, 238, 238]\n  , palevioletred: [219, 112, 147]\n  , papayawhip: [255, 239, 213]\n  , peachpuff: [255, 218, 185]\n  , peru: [205, 133, 63]\n  , pink: [255, 192, 203]\n  , plum: [221, 160, 203]\n  , powderblue: [176, 224, 230]\n  , purple: [128, 0, 128]\n  , red: [255, 0, 0]\n  , rosybrown: [188, 143, 143]\n  , royalblue: [65, 105, 225]\n  , saddlebrown: [139, 69, 19]\n  , salmon: [250, 128, 114]\n  , sandybrown: [244, 164, 96]\n  , seagreen: [46, 139, 87]\n  , seashell: [255, 245, 238]\n  , sienna: [160, 82, 45]\n  , silver: [192, 192, 192]\n  , skyblue: [135, 206, 235]\n  , slateblue: [106, 90, 205]\n  , slategray: [119, 128, 144]\n  , slategrey: [119, 128, 144]\n  , snow: [255, 255, 250]\n  , springgreen: [0, 255, 127]\n  , steelblue: [70, 130, 180]\n  , tan: [210, 180, 140]\n  , teal: [0, 128, 128]\n  , thistle: [216, 191, 216]\n  , tomato: [255, 99, 71]\n  , turquoise: [64, 224, 208]\n  , violet: [238, 130, 238]\n  , wheat: [245, 222, 179]\n  , white: [255, 255, 255]\n  , whitesmoke: [245, 245, 245]\n  , yellow: [255, 255, 0]\n  , yellowgreen: [154, 205, 5]\n};\n});\nrequire.register(\"component-path/index.js\", function(exports, require, module){\n\nexports.basename = function(path){\n  return path.split('/').pop();\n};\n\nexports.dirname = function(path){\n  return path.split('/').slice(0, -1).join('/') || '.'; \n};\n\nexports.extname = function(path){\n  var base = exports.basename(path);\n  if (!~base.indexOf('.')) return '';\n  var ext = base.split('.').pop();\n  return '.' + ext;\n};\n});\nrequire.register(\"visionmedia-rework/index.js\", function(exports, require, module){\n\nmodule.exports = require('./lib/rework');\n});\nrequire.register(\"visionmedia-rework/lib/rework.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar css = require('css');\n\n/**\n * Expose `rework`.\n */\n\nexports = module.exports = rework;\n\n/**\n * Expose `visit` helpers.\n */\n\nexports.visit = require('./visit');\n\n/**\n * Expose prefix properties.\n */\n\nexports.properties = require('./properties');\n\n/**\n * Initialize a new stylesheet `Rework` with `str`.\n *\n * @param {String} str\n * @return {Rework}\n * @api public\n */\n\nfunction rework(str) {\n  return new Rework(css.parse(str));\n}\n\n/**\n * Initialize a new stylesheet `Rework` with `obj`.\n *\n * @param {Object} obj\n * @api private\n */\n\nfunction Rework(obj) {\n  this.obj = obj;\n}\n\n/**\n * Use the given plugin `fn(style, rework)`.\n *\n * @param {Function} fn\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.use = function(fn){\n  fn(this.obj.stylesheet, this);\n  return this;\n};\n\n/**\n * Specify global vendor `prefixes`,\n * explicit ones may still be passed\n * to most plugins.\n *\n * @param {Array} prefixes\n * @return {Rework}\n * @api public\n */\n\nRework.prototype.vendors = function(prefixes){\n  this.prefixes = prefixes;\n  return this;\n};\n\n/**\n * Stringify the stylesheet.\n *\n * @param {Object} options\n * @return {String}\n * @api public\n */\n\nRework.prototype.toString = function(options){\n  return css.stringify(this.obj, options);\n};\n\n/**\n * Expose plugins.\n */\n\nexports.mixin = exports.mixins = require('./plugins/mixin');\nexports.function = exports.functions = require('./plugins/function');\nexports.prefix = require('./plugins/prefix');\nexports.colors = require('./plugins/colors');\nexports.extend = require('./plugins/extend');\nexports.references = require('./plugins/references');\nexports.prefixValue = require('./plugins/prefix-value');\nexports.prefixSelectors = require('./plugins/prefix-selectors');\nexports.keyframes = require('./plugins/keyframes');\nexports.at2x = require('./plugins/at2x');\nexports.url = require('./plugins/url');\nexports.ease = require('./plugins/ease');\nexports.vars = require('./plugins/vars');\n\n/**\n * Try/catch plugins unavailable in component.\n */\n\n try {\n  exports.inline = require('./plugins/inline');\n} catch (err) {};\n\n});\nrequire.register(\"visionmedia-rework/lib/utils.js\", function(exports, require, module){\n\n/**\n * Strip `str` quotes.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.stripQuotes = function(str) {\n  if ('\"' == str[0] || \"'\" == str[0]) return str.slice(1, -1);\n  return str;\n};\n});\nrequire.register(\"visionmedia-rework/lib/visit.js\", function(exports, require, module){\n\n/**\n * Visit `node`'s declarations recursively and\n * invoke `fn(declarations, node)`.\n *\n * @param {Object} node\n * @param {Function} fn\n * @api private\n */\n\nexports.declarations = function(node, fn){\n  node.rules.forEach(function(rule){\n    // @media etc\n    if (rule.rules) {\n      exports.declarations(rule, fn);\n      return;\n    }\n\n    // keyframes\n    if (rule.keyframes) {\n      rule.keyframes.forEach(function(keyframe){\n        fn(keyframe.declarations, rule);\n      });\n      return;\n    }\n\n    // @charset, @import etc\n    if (!rule.declarations) return;\n\n    fn(rule.declarations, node);\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/properties.js\", function(exports, require, module){\n\n/**\n * Prefixed properties.\n */\n\nmodule.exports = [\n  'animation',\n  'animation-delay',\n  'animation-direction',\n  'animation-duration',\n  'animation-fill-mode',\n  'animation-iteration-count',\n  'animation-name',\n  'animation-play-state',\n  'animation-timing-function',\n  'appearance',\n  'background-visibility',\n  'background-composite',\n  'blend-mode',\n  'border-bottom-left-radius',\n  'border-bottom-right-radius',\n  'border-fit',\n  'border-image',\n  'border-vertical-spacing',\n  'box-align',\n  'box-direction',\n  'box-flex',\n  'box-flex-group',\n  'box-lines',\n  'box-ordinal-group',\n  'box-orient',\n  'box-pack',\n  'box-reflect',\n  'box-sizing',\n  'clip-path',\n  'column-count',\n  'column-width',\n  'column-min-width',\n  'column-width-policy',\n  'column-gap',\n  'column-rule',\n  'column-rule-color',\n  'column-rule-style',\n  'column-rule-width',\n  'column-span',\n  'flex',\n  'flex-basis',\n  'flex-direction',\n  'flex-flow',\n  'flex-grow',\n  'flex-shrink',\n  'flex-wrap',\n  'flex-flow-from',\n  'flex-flow-into',\n  'font-smoothing',\n  'transform',\n  'transform-origin',\n  'transform-origin-x',\n  'transform-origin-y',\n  'transform-origin-z',\n  'transform-style',\n  'transition',\n  'transition-delay',\n  'transition-duration',\n  'transition-property',\n  'transition-timing-function',\n  'user-drag',\n  'user-modify',\n  'user-select',\n  'wrap',\n  'wrap-flow',\n  'wrap-margin',\n  'wrap-padding',\n  'wrap-through',\n  'overflow-scrolling'\n];\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/function.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit')\n  , utils = require('../utils')\n  , strip = utils.stripQuotes;\n\n/**\n * Define custom function.\n */\n\nmodule.exports = function(functions, args) {\n  if (!functions) throw new Error('functions object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      for (var name in functions) {\n        func(declarations, name, functions[name], args);\n      }\n    });\n  }\n};\n\n/**\n * Escape regexp codes in string.\n *\n * @param {String} s\n * @api private\n */\n\nfunction escape(s) {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n/**\n * Visit declarations and apply functions.\n *\n * @param {Array} declarations\n * @param {Object} functions\n * @param {Boolean} [parseArgs]\n * @api private\n */\n\nfunction func(declarations, name, func, parseArgs) {\n  if (false !== parseArgs) parseArgs = true;\n  var regexp = new RegExp(escape(name) + '\\\\(([^\\)]+)\\\\)', 'g');\n  declarations.forEach(function(decl){\n    if (!~decl.value.indexOf(name + '(')) return;\n    decl.value = decl.value.replace(regexp, function(_, args){\n      if (!parseArgs) return func.call(decl, strip(args));\n      args = args.split(/,\\s*/).map(strip);\n      return func.apply(decl, args);\n    });\n  });\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/url.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , func = require('./function');\n\n/**\n * Map `url()` calls.\n *\n *   body {\n *     background: url(/images/bg.png);\n *   }\n *\n * yields:\n *\n *   body {\n *     background: url(http://example.com/images/bg.png);\n *   }\n *\n */\n\nmodule.exports = function(fn) {\n  return func({\n    url: function(path){\n      return 'url(\"' + fn(path) + '\")';\n    }\n  }, false);\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/vars.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Add variable support.\n *\n *   :root {\n *     var-header-color: #06c;\n *   }\n *\n *   h1 {\n *     background-color: var(header-color);\n *   }\n *\n * yields:\n *\n *   h1 {\n *     background-color: #06c;\n *   }\n *\n */\n\nmodule.exports = function(map) {\n  map = map || {};\n\n  function replace(str) {\n    return str.replace(/\\bvar\\((.*?)\\)/g, function(_, name){\n      var val = map[name];\n      if (!val) throw new Error('variable \"' + name + '\" is undefined');\n      if (val.match(/\\bvar\\(/)) val = replace(val);\n      return val;\n    });\n  }\n\n  return function vars(style){\n    visit.declarations(style, function(declarations, node){\n      // map vars\n      declarations.forEach(function(decl){\n        if (0 != decl.property.indexOf('var-')) return;\n        var name = decl.property.replace('var-', '');\n        map[name] = decl.value;\n      });\n\n      // substitute values\n      declarations.forEach(function(decl){\n        if (!decl.value.match(/\\bvar\\(/)) return;\n        decl.value = replace(decl.value);\n      });\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/ease.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Easing functions.\n */\n\nvar ease = {\n  'ease-in-out-back': 'cubic-bezier(0.680, -0.550, 0.265, 1.550)',\n  'ease-in-out-circ': 'cubic-bezier(0.785, 0.135, 0.150, 0.860)',\n  'ease-in-out-expo': 'cubic-bezier(1.000, 0.000, 0.000, 1.000)',\n  'ease-in-out-sine': 'cubic-bezier(0.445, 0.050, 0.550, 0.950)',\n  'ease-in-out-quint': 'cubic-bezier(0.860, 0.000, 0.070, 1.000)',\n  'ease-in-out-quart': 'cubic-bezier(0.770, 0.000, 0.175, 1.000)',\n  'ease-in-out-cubic': 'cubic-bezier(0.645, 0.045, 0.355, 1.000)',\n  'ease-in-out-quad': 'cubic-bezier(0.455, 0.030, 0.515, 0.955)',\n  'ease-out-back': 'cubic-bezier(0.175, 0.885, 0.320, 1.275)',\n  'ease-out-circ': 'cubic-bezier(0.075, 0.820, 0.165, 1.000)',\n  'ease-out-expo': 'cubic-bezier(0.190, 1.000, 0.220, 1.000)',\n  'ease-out-sine': 'cubic-bezier(0.390, 0.575, 0.565, 1.000)',\n  'ease-out-quint': 'cubic-bezier(0.230, 1.000, 0.320, 1.000)',\n  'ease-out-quart': 'cubic-bezier(0.165, 0.840, 0.440, 1.000)',\n  'ease-out-cubic': 'cubic-bezier(0.215, 0.610, 0.355, 1.000)',\n  'ease-out-quad': 'cubic-bezier(0.250, 0.460, 0.450, 0.940)',\n  'ease-in-back': 'cubic-bezier(0.600, -0.280, 0.735, 0.045)',\n  'ease-in-circ': 'cubic-bezier(0.600, 0.040, 0.980, 0.335)',\n  'ease-in-expo': 'cubic-bezier(0.950, 0.050, 0.795, 0.035)',\n  'ease-in-sine': 'cubic-bezier(0.470, 0.000, 0.745, 0.715)',\n  'ease-in-quint': 'cubic-bezier(0.755, 0.050, 0.855, 0.060)',\n  'ease-in-quart': 'cubic-bezier(0.895, 0.030, 0.685, 0.220)',\n  'ease-in-cubic': 'cubic-bezier(0.550, 0.055, 0.675, 0.190)',\n  'ease-in-quad': 'cubic-bezier(0.550, 0.085, 0.680, 0.530)'\n};\n\n/**\n * Keys.\n */\n\nvar keys = Object.keys(ease);\n\n/**\n * Provide additional easing functions:\n *\n *    #logo {\n *      transition: all 500ms ease-out-back;\n *    }\n *\n * yields:\n *\n *    #logo {\n *      transition: all 500ms cubic-bezier(0.175, 0.885, 0.320, 1.275)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    if (!decl.property.match(/transition|animation|timing/)) continue;\n    for (var k = 0; k < keys.length; ++k) {\n      var key = keys[k];\n      if (~decl.value.indexOf(key)) {\n        decl.value = decl.value.replace(key, ease[key]);\n        break;\n      }\n    }\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/at2x.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , path = require('path')\n  , stripQuotes = utils.stripQuotes;\n\n/**\n * Translate\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n * yields:\n *\n *   .logo {\n *     background-image: url('/public/images/logo.png')\n *   }\n *\n *   @media all and (-webkit-min-device-pixel-ratio : 1.5) {\n *     .logo {\n *       background-image: url(\"/public/images/logo@2x.png\");\n *       background-size: contain\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.declarations) return;\n\n      var backgroundSize = rule.declarations.filter(backgroundWithSize).map(value)[0] || 'contain';\n\n      rule.declarations.filter(backgroundWithURL).forEach(function(decl){\n        // parse url\n        var i = decl.value.indexOf('url(');\n        var url = stripQuotes(decl.value.slice(i + 4, decl.value.indexOf(')', i)));\n        var ext = path.extname(url);\n\n        // ignore .svg\n        if ('.svg' == ext) return;\n\n        // @2x value\n        url = path.join(path.dirname(url), path.basename(url, ext) + '@2x' + ext);\n\n        // wrap in @media\n        style.rules.push({\n          type: 'media',\n          media: 'all and (-webkit-min-device-pixel-ratio: 1.5)',\n          rules: [\n            {\n              type: 'rule',\n              selectors: rule.selectors,\n              declarations: [\n                {\n                  type: 'declaration',\n                  property: 'background-image',\n                  value: 'url(\"' + url + '\")'\n                },\n                {\n                  type: 'declaration',\n                  property: 'background-size',\n                  value: backgroundSize\n                }\n              ]\n            }\n          ]\n        });\n      });\n    });\n  };\n\n  return function(style, rework) {\n    vendors = vendors || rework.prefixes;\n    visit(style.rules, style);\n  };\n};\n\n/**\n * Filter background[-image] with url().\n */\n\nfunction backgroundWithURL(decl) {\n  return ('background' == decl.property\n    || 'background-image' == decl.property)\n    && ~decl.value.indexOf('url(');\n}\n\n/**\n * Predicate on background-size property.\n */\n\nfunction backgroundWithSize(decl) {\n  return 'background-size' == decl.property;\n}\n\n/**\n * Return value atribute of a declaration.\n */\n\nfunction value(decl) {\n  return decl.value;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/colors.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar parse = require('color-parser')\n  , functions = require('./function');\n\n/**\n * Provide color manipulation helpers:\n *\n *    button {\n *      background: rgba(#eee, .5)\n *    }\n *\n * yields:\n *\n *    button {\n *      background: rgba(238, 238, 238, .5)\n *    }\n *\n */\n\nmodule.exports = function() {\n  return functions({\n    rgba: function(color, alpha){\n      if (2 == arguments.length) {\n        var c = parse(color.trim());\n        var args = [c.r, c.g, c.b, alpha];\n      } else {\n        var args = [].slice.call(arguments);\n      }\n      \n      return 'rgba(' + args.join(', ') + ')';\n    }\n  });\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/extend.js\", function(exports, require, module){\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('rework:extend');\n\n/**\n * Add extension support.\n */\n\nmodule.exports = function() {\n  debug('use extend');\n  return function(style, rework) {\n    var map = {};\n    var rules = style.rules.length;\n\n    for (var j = 0; j < rules; j++) {\n      var rule = style.rules[j];\n      if (!rule || !rule.selectors) return;\n\n      // map selectors\n      rule.selectors.forEach(function(sel, i) {\n        map[sel] = rule;\n        if ('%' == sel[0]) rule.selectors.splice(i, 1);\n      });\n\n      // visit extend: properties\n      visit(rule, map);\n\n      // clean up empty rules\n      if (!rule.declarations.length) {\n        style.rules.splice(j--, 1);\n      }\n    };\n  }\n};\n\n/**\n * Visit declarations and extensions.\n *\n * @param {Object} rule\n * @param {Object} map\n * @api private\n */\n\nfunction visit(rule, map) {\n  for (var i = 0; i < rule.declarations.length; ++i) {\n    var decl = rule.declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    if (!/^extends?$/.test(key)) continue;\n\n    var extend = map[val];\n    if (!extend) throw new Error('failed to extend \"' + val + '\"');\n\n    var keys = Object.keys(map);\n    keys.forEach(function(key) {\n      if (0 != key.indexOf(val)) return;\n      var extend = map[key];\n      var suffix = key.replace(val, '');\n      debug('extend %j with %j', rule.selectors, extend.selectors);\n      extend.selectors = extend.selectors.concat(rule.selectors.map(function(sel) {\n        return sel + suffix;\n      }));\n    });\n\n    rule.declarations.splice(i--, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/mixin.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , visit = require('../visit');\n\n/**\n * Define custom mixins.\n */\n\nmodule.exports = function(mixins) {\n  if (!mixins) throw new Error('mixins object required');\n  return function(style, rework){\n    visit.declarations(style, function(declarations){\n      mixin(declarations, mixins);\n    });\n  }\n};\n\n/**\n * Visit declarations and apply mixins.\n *\n * @param {Array} declarations\n * @param {Object} mixins\n * @api private\n */\n\nfunction mixin(declarations, mixins) {\n  for (var i = 0; i < declarations.length; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n    var fn = mixins[key];\n    if (!fn) continue;\n\n    // invoke mixin\n    var ret = fn(val);\n\n    // apply properties\n    for (var key in ret) {\n      declarations.splice(i++, 0, {\n        type: 'declaration',\n        property: key,\n        value: ret[key]\n      });\n    }\n\n    // remove original\n    declarations.splice(i, 1);\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/keyframes.js\", function(exports, require, module){\n\n/**\n * Prefix keyframes.\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n * yields:\n *\n *   @keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n *   @-webkit-keyframes animation {\n *     from {\n *       opacity: 0;\n *     }\n *\n *     to {\n *       opacity: 1;\n *     }\n *   }\n *\n */\n\nmodule.exports = function(vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    style.rules.forEach(function(rule){\n      if (!rule.keyframes) return;\n\n      vendors.forEach(function(vendor){\n        if (vendor == rule.vendor) return;\n        var clone = cloneKeyframes(rule);\n        clone.vendor = vendor;\n        style.rules.push(clone);\n      });\n    });\n  }\n};\n\n/**\n * Clone keyframes.\n *\n * @param {Object} rule\n * @api private\n */\n\nfunction cloneKeyframes(rule) {\n  var clone = { name: rule.name };\n  clone.type = 'keyframes';\n  clone.vendor = rule.vendor;\n  clone.keyframes = [];\n  rule.keyframes.forEach(function(keyframe){\n    clone.keyframes.push(cloneKeyframe(keyframe));\n  });\n  return clone;\n}\n\n/**\n * Clone `keyframe`.\n *\n * @param {Object} keyframe\n * @api private\n */\n\nfunction cloneKeyframe(keyframe) {\n  var clone = {};\n  clone.type = 'keyframe';\n  clone.values = keyframe.values.slice();\n  clone.declarations = keyframe.declarations.map(function(decl){\n    return {\n      type: 'declaration',\n      property: decl.property,\n      value: decl.value\n    }\n  });\n  return clone;\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/references.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Provide property reference support.\n *\n *    button {\n *      width: 50px;\n *      height: @width;\n *      line-height: @height;\n *    }\n *\n * yields:\n *\n *    button {\n *      width: 50px;\n*      height: 50px;\n*      line-height: 50px;\n *    }\n *\n */\n\nmodule.exports = function() {\n  return function(style, rework){\n    visit.declarations(style, substitute);\n  }\n};\n\n/**\n * Substitute easing functions.\n *\n * @api private\n */\n\nfunction substitute(declarations) {\n  var map = {};\n\n  for (var i = 0, len = declarations.length; i < len; ++i) {\n    var decl = declarations[i];\n    var key = decl.property;\n    var val = decl.value;\n\n    decl.value = val.replace(/@([-\\w]+)/g, function(_, name){\n      if (null == map[name]) throw new Error('@' + name + ' is not defined in this scope');\n      return map[name];\n    });\n\n    map[key] = decl.value;\n  }\n}\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", function(exports, require, module){\n\n/**\n * Prefix selectors with `str`.\n *\n *    button {\n *      color: red;\n *    }\n *\n * yields:\n *\n *    #dialog button {\n *      color: red;\n *    }\n *\n */\n\nmodule.exports = function(str) {\n  return function(style){\n    style.rules = style.rules.map(function(rule){\n      if (!rule.selectors) return rule;\n      rule.selectors = rule.selectors.map(function(selector){\n        return str + ' ' + selector;\n      });\n      return rule;\n    });\n  }\n};\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix-value.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `value`.\n *\n *    button {\n *      transition: height, transform 2s, width 0.3s linear;\n *    }\n *\n * yields:\n *\n *    button {\n *      -webkit-transition: height, -webkit-transform 2s, width 0.3s linear;\n *      -moz-transition: height, -moz-transform 2s, width 0.3s linear;\n *      transition: height, transform 2s, width 0.3s linear\n *    }\n *\n */\n\nmodule.exports = function(value, vendors) {\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n\n    visit.declarations(style, function(declarations){\n      for (var i = 0; i < declarations.length; ++i) {\n        var decl = declarations[i];\n        if (!~decl.value.indexOf(value)) continue;\n\n        // ignore vendor-prefixed properties\n        if ('-' == decl.property[0]) continue;\n\n        // ignore vendor-prefixed values\n        if (~decl.value.indexOf('-' + value)) continue;\n\n        // vendor prefixed props\n        vendors.forEach(function(vendor){\n          var prop = 'transition' == decl.property\n            ? vendor + decl.property\n            : decl.property;\n\n          declarations.splice(i++, 0, {\n            type: 'declaration',\n            property: prop,\n            value: decl.value.replace(value, vendor + value)\n          });\n        });\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework/lib/plugins/prefix.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar visit = require('../visit');\n\n/**\n * Prefix `prop`.\n *\n *   .button {\n *     border-radius: 5px;\n *   }\n *\n * yields:\n *\n *   .button {\n *     -webkit-border-radius: 5px;\n *     -moz-border-radius: 5px;\n *     border-radius: 5px;\n *   }\n *\n */\n\nmodule.exports = function(prop, vendors) {\n  var props = Array.isArray(prop)\n    ? prop\n    : [prop];\n\n  return function(style, rework){\n    vendors = vendors || rework.prefixes;\n    visit.declarations(style, function(declarations, node){\n      var only = node.vendor;\n      var isKeyframes = !! node.keyframes;\n\n      for (var i = 0; i < props.length; ++i) {\n        var prop = props[i];\n\n        for (var j = 0, len = declarations.length; j < len; ++j) {\n          var decl = declarations[j];\n          if (prop != decl.property) continue;\n\n          // vendor prefixed props\n          for (var k = 0; k < vendors.length; ++k) {\n            if (!only && isKeyframes) continue;\n            if (only && only != vendors[k]) continue;\n            declarations.push({\n              type: 'declaration',\n              property: vendors[k] + decl.property,\n              value: decl.value\n            });\n          }\n\n          // original prop\n          declarations.push(decl);\n          declarations.splice(j, 1);\n        }\n      }\n    });\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/index.js\", function(exports, require, module){\n\nexports['border-radius'] = require('./lib/border-radius');\nexports['overflow'] = require('./lib/ellipsis');\nexports['absolute'] = require('./lib/absolute');\nexports['relative'] = require('./lib/relative');\nexports['fixed'] = require('./lib/fixed');\nexports['opacity'] = require('./lib/opacity');\nexports['size'] = require('./lib/size');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/absolute.js\", function(exports, require, module){\n\n/**\n * absolute: top left\n * absolute: top 5px left 5px\n */\n\nmodule.exports = require('./position')('absolute');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/border-radius.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar position = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * border-radius: 5px\n * border-radius: 5px 10px\n * border-radius: top 5px\n * border-radius: top 5px left 10px\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var pos;\n  var ret;\n\n  for (var i = 0; i < vals.length; ++i) {\n    var val = vals[i];\n    if (!position[val]) continue;\n    ret = ret || {};\n    pos = val;\n    val = vals[++i];\n    switch (pos) {\n      case 'top':\n      case 'bottom':\n        ret['border-' + pos + '-left-radius'] = val;\n        ret['border-' + pos + '-right-radius'] = val;\n        break;\n      case 'left':\n      case 'right':\n        ret['border-top-' + pos + '-radius'] = val;\n        ret['border-bottom-' + pos + '-radius'] = val;\n        break;\n    }\n  }\n\n  if (!ret) {\n    return {\n      'border-radius': str\n    }\n  }\n\n  return ret;\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/ellipsis.js\", function(exports, require, module){\n\n/**\n * overflow: ellipsis\n */\n\nmodule.exports = function(type) {\n  if ('ellipsis' == type) {\n    return {\n      'white-space': 'nowrap',\n      'overflow': 'hidden',\n      'text-overflow': 'ellipsis'\n    }\n  }\n\n  return {\n    'overflow': type\n  };\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/fixed.js\", function(exports, require, module){\n\n/**\n * fixed: top left\n * fixed: top 5px left 5px\n */\n\nmodule.exports = require('./position')('fixed');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/opacity.js\", function(exports, require, module){\n\n/**\n * opacity: 1\n */\n\nmodule.exports = function(str){\n  var vals = str.split(/\\s+/);\n  var a = parseFloat(vals.shift());\n  var n = a * 100 | 0;\n  var tail = vals.length ? ' ' + vals.join(' '): '';\n  return {\n    'opacity': a + tail,\n    '-ms-filter': 'progid:DXImageTransform.Microsoft.Alpha(Opacity=' + n + ')' + tail,\n    'filter': 'alpha(opacity=' + n + ')' + tail\n  }\n};\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/position.js\", function(exports, require, module){\n\n/**\n * Positions.\n */\n\nvar positions = {\n  top: true,\n  left: true,\n  right: true,\n  bottom: true\n};\n\n/**\n * Return a mixin for the given position `type`.\n *\n * @param {String} type\n * @return {Function}\n * @api private\n */\n\nmodule.exports = function(type){\n  return function(str){\n    var val;\n    var pos;\n    var ret = {};\n    var vals = str.split(/\\s+/);\n\n    ret.position = type;\n\n    for (var i = 0; i < vals.length; ++i) {\n      val = vals[i];\n      if (positions[val]) {\n        pos = val;\n        ret[pos] = '0';\n      } else {\n        ret[pos] = val;\n      }\n    }\n\n    return ret;\n  };\n}\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/relative.js\", function(exports, require, module){\n\n/**\n * relative: top left\n * relative: top 5px left 5px\n */\n\nmodule.exports = require('./position')('relative');\n\n});\nrequire.register(\"visionmedia-rework-mixins/lib/size.js\", function(exports, require, module){\n/**\n * size: 100px 50px\n */\n\nmodule.exports = function(sizes) {\n  sizes = sizes.split(/\\s+/);\n  if ( sizes.length == 1 ) sizes[1] = sizes[0];\n\n  return {\n    width:  sizes[0],\n    height: sizes[1]\n  };\n};\n\n});\nrequire.register(\"styl/index.js\", function(exports, require, module){\n\n/**\n * Module dependencies.\n */\n\nvar whitespace = require('css-whitespace');\nvar mixins = require('rework-mixins');\nvar rework = require('rework');\nvar props = rework.properties;\n\n/**\n * Expose `Style`.\n */\n\nmodule.exports = Style;\n\n/**\n * Initialize a new Style with the given css `str`.\n *\n * Options:\n *\n *  - `whitespace` utilize css whitespace transformations\n *  - `compress` enable output compression\n *\n * @param {String} str\n * @param {Object} options\n * @api public\n */\n\nfunction Style(str, options) {\n  if (!(this instanceof Style)) return new Style(str, options);\n  options = options || {};\n  if (options.whitespace) str = whitespace(str);\n  this.str = str;\n  this.compress = options.compress;\n  this.rework = rework(str);\n  this.delegate(['vendors', 'use']);\n  this.vendors(['-ms-', '-moz-', '-webkit-']);\n}\n\n/**\n * Delegate `methods` to rework.\n *\n * @param {Array} methods\n * @api private\n */\n\nStyle.prototype.delegate = function(methods){\n  var self = this;\n  methods.forEach(function(method){\n    self[method] = self.rework[method].bind(self.rework);\n  });\n};\n\n/**\n * Return the compiled CSS.\n *\n * @return {String}\n * @api public\n */\n\nStyle.prototype.toString = function(){\n  this.use(rework.mixin(mixins));\n  this.use(rework.keyframes());\n  this.use(rework.ease());\n  this.use(rework.prefixValue('linear-gradient'));\n  this.use(rework.prefixValue('radial-gradient'));\n  this.use(rework.prefixValue('transform'));\n  this.use(rework.prefix(props));\n  this.use(rework.colors());\n  this.use(rework.references());\n  this.use(rework.at2x());\n  this.use(rework.extend());\n  return this.rework.toString({ compress: this.compress });\n};\n\n});\n\n\n\n\n\n\n\nrequire.alias(\"visionmedia-debug/index.js\", \"styl/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"styl/deps/debug/debug.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"debug/index.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/compiler.js\", \"styl/deps/css-whitespace/lib/compiler.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/lexer.js\", \"styl/deps/css-whitespace/lib/lexer.js\");\nrequire.alias(\"visionmedia-css-whitespace/lib/parser.js\", \"styl/deps/css-whitespace/lib/parser.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"styl/deps/css-whitespace/index.js\");\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"css-whitespace/index.js\");\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-css-whitespace/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-css-whitespace/deps/debug/debug.js\");\n\nrequire.alias(\"visionmedia-css-whitespace/index.js\", \"visionmedia-css-whitespace/index.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"styl/deps/rework/index.js\");\nrequire.alias(\"visionmedia-rework/lib/rework.js\", \"styl/deps/rework/lib/rework.js\");\nrequire.alias(\"visionmedia-rework/lib/utils.js\", \"styl/deps/rework/lib/utils.js\");\nrequire.alias(\"visionmedia-rework/lib/visit.js\", \"styl/deps/rework/lib/visit.js\");\nrequire.alias(\"visionmedia-rework/lib/properties.js\", \"styl/deps/rework/lib/properties.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/function.js\", \"styl/deps/rework/lib/plugins/function.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/url.js\", \"styl/deps/rework/lib/plugins/url.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/vars.js\", \"styl/deps/rework/lib/plugins/vars.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/ease.js\", \"styl/deps/rework/lib/plugins/ease.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/at2x.js\", \"styl/deps/rework/lib/plugins/at2x.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/colors.js\", \"styl/deps/rework/lib/plugins/colors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/extend.js\", \"styl/deps/rework/lib/plugins/extend.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/mixin.js\", \"styl/deps/rework/lib/plugins/mixin.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/keyframes.js\", \"styl/deps/rework/lib/plugins/keyframes.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/references.js\", \"styl/deps/rework/lib/plugins/references.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-selectors.js\", \"styl/deps/rework/lib/plugins/prefix-selectors.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix-value.js\", \"styl/deps/rework/lib/plugins/prefix-value.js\");\nrequire.alias(\"visionmedia-rework/lib/plugins/prefix.js\", \"styl/deps/rework/lib/plugins/prefix.js\");\nrequire.alias(\"visionmedia-rework/index.js\", \"rework/index.js\");\nrequire.alias(\"visionmedia-css/index.js\", \"visionmedia-rework/deps/css/index.js\");\nrequire.alias(\"visionmedia-css-parse/index.js\", \"visionmedia-css/deps/css-parse/index.js\");\n\nrequire.alias(\"visionmedia-css-stringify/index.js\", \"visionmedia-css/deps/css-stringify/index.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/compress.js\", \"visionmedia-css/deps/css-stringify/lib/compress.js\");\nrequire.alias(\"visionmedia-css-stringify/lib/identity.js\", \"visionmedia-css/deps/css-stringify/lib/identity.js\");\n\nrequire.alias(\"visionmedia-debug/index.js\", \"visionmedia-rework/deps/debug/index.js\");\nrequire.alias(\"visionmedia-debug/debug.js\", \"visionmedia-rework/deps/debug/debug.js\");\n\nrequire.alias(\"component-color-parser/index.js\", \"visionmedia-rework/deps/color-parser/index.js\");\nrequire.alias(\"component-color-parser/colors.js\", \"visionmedia-rework/deps/color-parser/colors.js\");\n\nrequire.alias(\"component-path/index.js\", \"visionmedia-rework/deps/path/index.js\");\n\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/absolute.js\", \"styl/deps/rework-mixins/lib/absolute.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/border-radius.js\", \"styl/deps/rework-mixins/lib/border-radius.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/ellipsis.js\", \"styl/deps/rework-mixins/lib/ellipsis.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/fixed.js\", \"styl/deps/rework-mixins/lib/fixed.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/opacity.js\", \"styl/deps/rework-mixins/lib/opacity.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/position.js\", \"styl/deps/rework-mixins/lib/position.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/relative.js\", \"styl/deps/rework-mixins/lib/relative.js\");\nrequire.alias(\"visionmedia-rework-mixins/lib/size.js\", \"styl/deps/rework-mixins/lib/size.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"styl/deps/rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"rework-mixins/index.js\");\nrequire.alias(\"visionmedia-rework-mixins/index.js\", \"visionmedia-rework-mixins/index.js\");\nrequire.alias(\"styl/index.js\", \"styl/index.js\");\n\nmodule.exports = require(\"styl/index.js\");\n",
      "type": "blob"
    },
    "pixie": {
      "path": "pixie",
      "content": "module.exports = {\"entryPoint\":\"lib/styl\",\"version\":\"0.2.8.1\"};",
      "type": "blob"
    },
    "test/test": {
      "path": "test/test",
      "content": "(function() {\n  var styl;\n\n  styl = require(\"../lib/styl\");\n\n  describe(\"styl\", function() {\n    return it(\"should compile a little\", function() {\n      var output, source;\n      console.log(styl);\n      source = \"body\\n  background-color: red\";\n      output = \"body {\\n  background-color: red;\\n}\";\n      return assert.equal(styl(source, {\n        whitespace: true\n      }).toString(), output);\n    });\n  });\n\n}).call(this);\n",
      "type": "blob"
    }
  },
  "progenitor": {
    "url": "http://www.danielx.net/editor/"
  },
  "version": "0.2.8.1",
  "entryPoint": "lib/styl",
  "repository": {
    "branch": "v0.2.8.1",
    "default_branch": "master",
    "full_name": "distri/styl",
    "homepage": null,
    "description": "Wrapper for styl",
    "html_url": "https://github.com/distri/styl",
    "url": "https://api.github.com/repos/distri/styl",
    "publishBranch": "gh-pages"
  },
  "dependencies": {}
}
